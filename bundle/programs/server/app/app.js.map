{"version":3,"sources":["meteor://ðŸ’»app/imports/api/accounts/server/methods.js","meteor://ðŸ’»app/imports/api/blocks/server/methods.js","meteor://ðŸ’»app/imports/api/blocks/server/publications.js","meteor://ðŸ’»app/imports/api/blocks/blocks.js","meteor://ðŸ’»app/imports/api/chain/server/methods.js","meteor://ðŸ’»app/imports/api/chain/server/publications.js","meteor://ðŸ’»app/imports/api/chain/chain.js","meteor://ðŸ’»app/imports/api/coin-stats/server/methods.js","meteor://ðŸ’»app/imports/api/coin-stats/coin-stats.js","meteor://ðŸ’»app/imports/api/delegations/server/methods.js","meteor://ðŸ’»app/imports/api/delegations/delegations.js","meteor://ðŸ’»app/imports/api/ledger/server/methods.js","meteor://ðŸ’»app/imports/api/proposals/server/methods.js","meteor://ðŸ’»app/imports/api/proposals/server/publications.js","meteor://ðŸ’»app/imports/api/proposals/proposals.js","meteor://ðŸ’»app/imports/api/records/server/methods.js","meteor://ðŸ’»app/imports/api/records/server/publications.js","meteor://ðŸ’»app/imports/api/records/records.js","meteor://ðŸ’»app/imports/api/status/server/publications.js","meteor://ðŸ’»app/imports/api/status/status.js","meteor://ðŸ’»app/imports/api/transactions/server/methods.js","meteor://ðŸ’»app/imports/api/transactions/server/publications.js","meteor://ðŸ’»app/imports/api/transactions/transactions.js","meteor://ðŸ’»app/imports/api/validators/server/methods.js","meteor://ðŸ’»app/imports/api/validators/server/publications.js","meteor://ðŸ’»app/imports/api/validators/validators.js","meteor://ðŸ’»app/imports/api/voting-power/history.js","meteor://ðŸ’»app/imports/api/evidences/evidences.js","meteor://ðŸ’»app/imports/api/validator-sets/validator-sets.js","meteor://ðŸ’»app/imports/startup/server/create-indexes.js","meteor://ðŸ’»app/imports/startup/server/index.js","meteor://ðŸ’»app/imports/startup/server/register-api.js","meteor://ðŸ’»app/imports/startup/server/util.js","meteor://ðŸ’»app/server/main.js"],"names":["Meteor","module","link","v","HTTP","_","default","Validators","fetchFromUrl","url","res","get","LCD","statusCode","e","console","log","methods","address","unblock","available","response","isUndefined","data","JSON","parse","content","isObject","result","account","indexOf","type","value","BaseVestingAccount","balance","undefined","length","delegations","unbonding","rewards","total","validator","findOne","$or","operator_address","delegator_address","val_commission","commission","shares","parseFloat","relegations","completionTime","forEach","relegation","entries","time","Date","completion_time","redelegationCompletionTime","undelegations","unbondingCompletionTime","delegation","i","unbondings","redelegations","redelegation","validator_dst_address","count","Promise","Blockscon","Chain","ValidatorSets","ValidatorRecords","Analytics","VPDistributions","VotingPowerHistory","Transactions","Evidences","sha256","getAddress","cheerio","getRemovedValidators","prevValidators","validators","p","splice","getValidatorProfileUrl","identity","them","pictures","primary","stringify","teamPage","page","load","attr","blocks","find","proposerAddress","fetch","heights","map","block","height","blocksStats","$in","totalBlockDiff","b","timeDiff","collection","rawCollection","pipeline","$match","$sort","$limit","settings","public","uptimeWindow","$unwind","$group","$cond","$eq","await","aggregate","toArray","RPC","status","sync_info","latest_block_height","currHeight","sort","limit","startHeight","params","SYNCING","until","call","curr","validatorSet","consensus_pubkey","totalValidators","Object","keys","startBlockTime","analyticsData","bulkValidators","initializeUnorderedBulkOp","bulkValidatorRecords","bulkVPHistory","bulkTransations","startGetHeightTime","blockData","hash","block_meta","block_id","transNum","header","num_txs","lastBlockHash","last_block_id","proposer_address","precommits","last_commit","push","validator_address","txs","t","Buffer","from","err","evidence","insert","precommitsCount","endGetHeightTime","startGetValidatorsTime","block_height","parseInt","validatorsCount","startBlockInsertTime","endBlockInsertTime","existingValidators","$exists","record","exists","voting_power","j","numBlocks","uptime","base","upsert","updateOne","$set","lastSeen","chainStatus","chainId","chain_id","lastSyncedTime","blockTime","defaultBlockTime","dateLatest","dateLast","Math","abs","getTime","endGetValidatorsTime","update","averageBlockTime","startFindValidatorsNameTime","proposer_priority","valExist","pub_key","accpub","bech32PrefixAccPub","operator_pubkey","bech32PrefixValPub","bech32PrefixConsPub","validatorData","description","profile_url","jailed","min_self_delegation","tokens","delegator_shares","bond_height","bond_intra_tx_counter","unbonding_height","unbonding_time","self_delegation","prev_voting_power","block_time","selfDelegation","prevVotingPower","changeType","changeData","removedValidators","r","dbValidators","fields","conPubKey","profileUrl","endFindValidatorsNameTime","startAnayticsInsertTime","endAnalyticsInsertTime","startVUpTime","execute","endVUpTime","startVRTime","endVRTime","activeValidators","numTopTwenty","ceil","numBottomEighty","topTwentyPower","bottomEightyPower","numTopThirtyFour","numBottomSixtySix","topThirtyFourPercent","bottomSixtySixPercent","vpDist","numValidators","totalVotingPower","createAt","endBlockTime","lastBlocksSyncedTime","sort_field","sort_order","countAll","pagination","total_page","round","total_record","current_page","to","offset","skip","proposer","transactions","publishComposite","children","export","Mongo","Collection","helpers","moment","ChainStates","findVotingPower","genValidators","power","consensus","round_state","step","votedPower","votes","prevotes_bit_array","split","votingHeight","votingRound","votingStep","prevotes","chain","node_info","network","latestBlockHeight","latestBlockTime","latest_block_time","latestState","activeVP","activeVotingPower","chainStates","bonding","bondedTokens","bonded_tokens","notBondedTokens","not_bonded_tokens","pool","communityPool","amount","denom","inflation","provisions","annualProvisions","created","readGenesis","genesisFile","genesis","distr","app_state","distribution","chainParams","genesisTime","genesis_time","consensusParams","consensus_params","auth","bank","staking","mint","communityTax","community_tax","baseProposerReward","base_proposer_reward","bonusProposerReward","bonus_proposer_reward","withdrawAddrEnabled","withdraw_addr_enabled","gov","startingProposalId","starting_proposal_id","depositParams","deposit_params","votingParams","voting_params","tallyParams","tally_params","slashing","supply","crisis","genutil","gentxs","msg","m","pubkey","floor","stakingFraction","pubkeyValue","genValidatorsSet","query","_data","subtract","$lt","toDate","$gt","format","data_24h","each","first","filter","val","CoinStats","publish","last_updated_at","coinId","coingeckoId","now","setMinutes","pow","usd","unix","Delegations","concat","createdAt","txInfo","timestamp","post","code","Error","raw_log","message","txhash","body","path","txMsg","adjustment","gas_estimate","Proposals","proposals","finishedProposalIds","Set","proposalId","proposalIds","bulkProposals","proposal","proposal_id","has","$nin","proposal_status","deposits","getVoteDetail","tally","updatedAt","id","voters","vote","voter","votingPowerMap","validatorAddressMap","moniker","delegatorShares","deductedShares","votingPower","check","Number","AverageData","AverageValidatorData","Status","MissedBlocksStats","MissedBlocks","BULKUPDATEMAXSIZE","getBlockStats","latestHeight","blockStats","cond","$and","$lte","options","assign","getPreviousRecord","voterAddress","previousRecord","blockHeight","lastUpdatedHeight","prevStats","pick","missCount","totalCount","COUNTMISSEDBLOCKS","startTime","explorerStatus","lastProcessedMissedBlockHeight","min","bulkMissedStats","initializeOrderedBulkOp","validatorsMap","proposerVoterStats","votedValidators","validatorSets","votedVotingPower","activeValidator","currentValidator","set","n","stats","client","_driver","mongo","bulkPromise","then","bindEnvironment","nInserted","nUpserted","nModified","lastProcessedMissedBlockTime","COUNTMISSEDBLOCKSSTATS","lastMissedBlockHeight","missedRecords","counts","existingRecord","lastMissedBlockTime","averageVotingPower","analytics","lastMinuteVotingPower","lastMinuteBlockTime","lastHourVotingPower","lastHourBlockTime","lastDayVotingPower","lastDayBlockTime","blockHeights","a","num","conditions","proposerMoniker","voterMoniker","AddressLength","toUpperCase","tx","txId","includes","bech32PrefixValAddr","bech32PrefixAccAddr","validatorAddress","delegatorAddress","$elemMatch","lastChainStats","delegators","miss_blocks","proposed_blocks","power_events","power_history","jailed_value","total_validator_num","unjailed_validator_num","direction","firstSeen","history","createIndex","unique","partialFilterExpression","bech32","Future","Npm","require","exec","toHexString","byteArray","byte","toString","slice","join","pubkeyToBech32","prefix","pubkeyAminoPrefix","buffer","alloc","copy","encode","toWords","bech32ToPubkey","fromWords","decode","words","getDelegator","operatorAddr","getKeybaseTeamPic","keybaseUrl","remote","rpc","lcd","timerBlocks","timerChain","timerConsensus","timerProposal","timerProposalsResults","timerMissedBlock","timerDelegation","timerAggregate","DEFAULTSETTINGS","updateChainStatus","error","updateBlock","getConsensusState","getProposals","getProposalsResults","updateMissedBlocks","getDelegations","aggregateMinutely","aggregateHourly","aggregateDaily","startup","isDevelopment","DEFAULTSETTINGSJSON","process","env","NODE_TLS_REJECT_UNAUTHORIZED","key","warn","param","debug","startTimer","setInterval","consensusInterval","blockInterval","statusInterval","proposalInterval","missedBlocksInterval","delegationInterval","getUTCSeconds","getUTCMinutes","getUTCHours"],"mappings":"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","file":"/app.js","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { HTTP } from 'meteor/http';\nimport _ from 'lodash';\nimport { Validators } from '/imports/api/validators/validators.js';\nconst fetchFromUrl = (url) => {\n    try{\n        let res = HTTP.get(LCD + url);\n        if (res.statusCode == 200){\n            return res\n        };\n    }\n    catch (e){\n        console.log(e, 'methods.accounts.fetchFromUlr');\n    }\n}\n\nMeteor.methods({\n    'accounts.getAccountDetail': function(address){\n        this.unblock();\n        let url = LCD + '/auth/accounts/'+ address;\n        try{\n            let available = HTTP.get(url);\n            if (available.statusCode == 200){\n                let response = _.isUndefined(available.data) ? JSON.parse(available.content) : available.data;\n                response = _.isObject(response) && response != null && !_.isUndefined(response.result) ? response.result : response;\n                let account;\n                if (['auth/Account', 'cosmos-sdk/Account'].indexOf(response.type) >= 0)\n                    account = response.value;\n                else if (['auth/DelayedVestingAccount', 'auth/ContinuousVestingAccount', 'cosmos-sdk/DelayedVestingAccount', 'cosmos-sdk/ContinuousVestingAccount'].indexOf(response.type) >= 0 )\n                    account = response.value.BaseVestingAccount;\n                if (account && _.get(account, 'BaseAccount.account_number', null) != null)\n                    return account;\n                return null;\n            }\n        }\n        catch (e){\n            console.log(e, 'methods.accounts.getAccountDetail')\n        }\n    },\n    'accounts.getBalance': function(address){\n        this.unblock();\n        let balance = {}\n\n        // get available atoms\n        let url = LCD + '/bank/balances/'+ address;\n        try{\n            let response = HTTP.get(url);\n            if (response.statusCode == 200){\n                response = typeof response.data != 'undefined' ? response.data : JSON.parse(response.content);\n                balance.available = typeof response == 'object' && response != null && typeof response.result != undefined ? response.result : response;\n                if (balance.available && balance.available.length > 0)\n                    balance.available = balance.available[0];\n            }\n        }\n        catch (e){\n            console.log(e, 'methods.accounts.getBalance1')\n        }\n\n        // get delegated amnounts\n        url = LCD + '/staking/delegators/'+address+'/delegations';\n        try{\n            let delegations = HTTP.get(url);\n            if (delegations.statusCode == 200){\n                balance.delegations = JSON.parse(delegations.content).result;\n            }\n        }\n        catch (e){\n            console.log(e, 'methods.accounts.getBalance2');\n        }\n        // get unbonding\n        url = LCD + '/staking/delegators/'+address+'/unbonding_delegations';\n        try{\n            let unbonding = HTTP.get(url);\n            if (unbonding.statusCode == 200){\n                balance.unbonding = JSON.parse(unbonding.content).result;\n            }\n        }\n        catch (e){\n            console.log(e, 'methods.accounts.getBalance3');\n        }\n\n        // get rewards\n        url = LCD + '/distribution/delegators/'+address+'/rewards';\n        try{\n            let rewards = HTTP.get(url);\n            if (rewards.statusCode == 200){\n                balance.rewards = JSON.parse(rewards.content).result.total;\n            }\n        }\n        catch (e){\n            console.log(e, 'methods.accounts.getBalance4');\n        }\n\n        // get commission\n        let validator = Validators.findOne(\n            {$or: [{operator_address:address}, {delegator_address:address}, {address:address}]})\n        if (validator) {\n            let url = LCD + '/distribution/validators/' + validator.operator_address;\n            balance.operator_address = validator.operator_address;\n            try {\n                let rewards = HTTP.get(url);\n                if (rewards.statusCode == 200){\n                    let content = JSON.parse(rewards.content).result;\n                    if (content.val_commission && content.val_commission.length > 0)\n                        balance.commission = content.val_commission[0];\n                }\n\n            }\n            catch (e){\n                console.log(e, 'methods.accounts.getBalance5')\n            }\n        }\n\n        return balance;\n    },\n    'accounts.getDelegation'(address, validator){\n        let url = `/staking/delegators/${address}/delegations/${validator}`;\n        let delegations = fetchFromUrl(url);\n        delegations = delegations && delegations.data.result;\n        if (delegations && delegations.shares)\n            delegations.shares = parseFloat(delegations.shares);\n\n        url = `/staking/redelegations?delegator=${address}&validator_to=${validator}`;\n        let relegations = fetchFromUrl(url);\n        relegations = relegations && relegations.data.result;\n        let completionTime;\n        if (relegations) {\n            relegations.forEach((relegation) => {\n                let entries = relegation.entries\n                let time = new Date(entries[entries.length-1].completion_time)\n                if (!completionTime || time > completionTime)\n                    completionTime = time\n            })\n            delegations.redelegationCompletionTime = completionTime;\n        }\n\n        url = `/staking/delegators/${address}/unbonding_delegations/${validator}`;\n        let undelegations = fetchFromUrl(url);\n        undelegations = undelegations && undelegations.data.result;\n        if (undelegations) {\n            delegations.unbonding = undelegations.entries.length;\n            delegations.unbondingCompletionTime = undelegations.entries[0].completion_time;\n        }\n        return delegations;\n    },\n    'accounts.getAllDelegations'(address){\n        let url = LCD + '/staking/delegators/'+address+'/delegations';\n\n        try{\n            let delegations = HTTP.get(url);\n            if (delegations.statusCode == 200){\n                delegations = JSON.parse(delegations.content).result;\n                if (delegations && delegations.length > 0){\n                    delegations.forEach((delegation, i) => {\n                        if (delegations[i] && delegations[i].shares)\n                            delegations[i].shares = parseFloat(delegations[i].shares);\n                    })\n                }\n\n                return delegations;\n            };\n        }\n        catch (e){\n            console.log(e, 'methods.accounts.getAllDelegations');\n        }\n    },\n    'accounts.getAllUnbondings'(address){\n        let url = LCD + '/staking/delegators/'+address+'/unbonding_delegations';\n\n        try{\n            let unbondings = HTTP.get(url);\n            if (unbondings.statusCode == 200){\n                unbondings = JSON.parse(unbondings.content).result;\n                return unbondings;\n            };\n        }\n        catch (e){\n            console.log(e, 'methods.accounts.getAllUnbondings');\n        }\n    },\n    'accounts.getAllRedelegations'(address, validator){\n        let url = `/staking/redelegations?delegator=${address}&validator_from=${validator}`;\n        let result = fetchFromUrl(url);\n        if (result && result.data) {\n            let redelegations = {}\n            result.data.forEach((redelegation) => {\n                let entries = redelegation.entries;\n                redelegations[redelegation.validator_dst_address] = {\n                    count: entries.length,\n                    completionTime: entries[0].completion_time\n                }\n            })\n            return redelegations\n        }\n    }\n})","import { Meteor } from 'meteor/meteor';\nimport { HTTP } from 'meteor/http';\nimport { Promise } from \"meteor/promise\";\nimport { Blockscon } from '/imports/api/blocks/blocks.js';\nimport { Chain } from '/imports/api/chain/chain.js';\nimport { ValidatorSets } from '/imports/api/validator-sets/validator-sets.js';\nimport { Validators } from '/imports/api/validators/validators.js';\nimport { ValidatorRecords, Analytics, VPDistributions} from '/imports/api/records/records.js';\nimport { VotingPowerHistory } from '/imports/api/voting-power/history.js';\nimport { Transactions } from '../../transactions/transactions.js';\nimport { Evidences } from '../../evidences/evidences.js';\nimport { sha256 } from 'js-sha256';\nimport { getAddress } from 'tendermint/lib/pubkey';\nimport * as cheerio from 'cheerio';\n\n// import Block from '../../../ui/components/Block';\n\n// getValidatorVotingPower = (validators, address) => {\n//     for (v in validators){\n//         if (validators[v].address == address){\n//             return parseInt(validators[v].voting_power);\n//         }\n//     }\n// }\n\ngetRemovedValidators = (prevValidators, validators) => {\n    // let removeValidators = [];\n    for (p in prevValidators){\n        for (v in validators){\n            if (prevValidators[p].address == validators[v].address){\n                prevValidators.splice(p,1);\n            }\n        }\n    }\n\n    return prevValidators;\n}\n\ngetValidatorProfileUrl = (identity) => {\n    if (identity.length == 16){\n        let response = HTTP.get(`https://keybase.io/_/api/1.0/user/lookup.json?key_suffix=${identity}&fields=pictures`)\n        if (response.statusCode == 200) {\n            let them = response.data.them\n            return them && them.length && them[0].pictures && them[0].pictures.primary && them[0].pictures.primary.url;\n        } else {\n            console.log(JSON.stringify(response), 'methods.blocks.getValidatorProfileUrl');\n        }\n    } else if (identity.indexOf(\"keybase.io/team/\")>0){\n        let teamPage = HTTP.get(identity);\n        if (teamPage.statusCode == 200){\n            let page = cheerio.load(teamPage.content);\n            return page(\".kb-main-card img\").attr('src');\n        } else {\n            console.log(JSON.stringify(teamPage), 'methods.blocks.getValidatorProfileUrl2');\n        }\n    }\n}\n\n// var filtered = [1, 2, 3, 4, 5].filter(notContainedIn([1, 2, 3, 5]));\n// console.log(filtered); // [4]\n\nMeteor.methods({\n    'blocks.averageBlockTime'(address){\n        let blocks = Blockscon.find({proposerAddress:address}).fetch();\n        let heights = blocks.map((block, i) => {\n            return block.height;\n        });\n        let blocksStats = Analytics.find({height:{$in:heights}}).fetch();\n        // console.log(blocksStats);\n\n        let totalBlockDiff = 0;\n        for (b in blocksStats){\n            totalBlockDiff += blocksStats[b].timeDiff;\n        }\n        return totalBlockDiff/heights.length;\n    },\n    'blocks.findUpTime'(address){\n        let collection = ValidatorRecords.rawCollection();\n        // let aggregateQuery = Meteor.wrapAsync(collection.aggregate, collection);\n        var pipeline = [\n            {$match:{\"address\":address}},\n            // {$project:{address:1,height:1,exists:1}},\n            {$sort:{\"height\":-1}},\n            {$limit:(Meteor.settings.public.uptimeWindow-1)},\n            {$unwind: \"$_id\"},\n            {$group:{\n                \"_id\": \"$address\",\n                \"uptime\": {\n                    \"$sum\":{\n                        $cond: [{$eq: ['$exists', true]}, 1, 0]\n                    }\n                }\n            }\n            }];\n        // let result = aggregateQuery(pipeline, { cursor: {} });\n\n        return Promise.await(collection.aggregate(pipeline).toArray());\n        // return .aggregate()\n    },\n    'blocks.getLatestHeight': function() {\n        this.unblock();\n        let url = RPC+'/status';\n        try{\n            let response = HTTP.get(url);\n            let status = typeof response.data != 'undefined' ? response.data : JSON.parse(response.content);\n            status = typeof status == 'object' && status != null && status.result != undefined ? status.result : status;\n            return (status.sync_info.latest_block_height);\n        }\n        catch (e){\n            return 0;\n        }\n    },\n    'blocks.getCurrentHeight': function() {\n        this.unblock();\n        let currHeight = Blockscon.find({},{sort:{height:-1},limit:1}).fetch();\n        // console.log(\"currentHeight:\"+currHeight);\n        let startHeight = Meteor.settings.params.startHeight;\n        if (currHeight && currHeight.length == 1) {\n            let height = currHeight[0].height;\n            if (height > startHeight)\n                return height\n        }\n        return startHeight\n    },\n    'blocks.blocksUpdate': function() {\n        if (SYNCING)\n            return \"Syncing...\";\n        else console.log(\"start to sync\");\n        // Meteor.clearInterval(Meteor.timerHandle);\n        // get the latest height\n        let until = Meteor.call('blocks.getLatestHeight');\n        // console.log(until);\n        // get the current height in db\n        let curr = Meteor.call('blocks.getCurrentHeight');\n        console.log(curr);\n        // loop if there's update in db\n        if (until > curr) {\n            SYNCING = true;\n\n            let validatorSet = {}\n            // get latest validator candidate information\n            url = LCD+'/staking/validators';\n\n            try{\n                response = HTTP.get(url);\n                response = typeof response.data != 'undefined' ? response.data : JSON.parse(response.content);\n                response = typeof response == 'object' && response != null && response.result ? response.result : response;\n                response.forEach((validator) => validatorSet[validator.consensus_pubkey] = validator);\n            }\n            catch(e){\n                console.log(e, 'methods.blocks.blocksUpdate1');\n            }\n\n            url = LCD+'/staking/validators?status=unbonding';\n\n            try{\n                response = HTTP.get(url);\n                response = typeof response.data != 'undefined' ? response.data : JSON.parse(response.content);\n                response = typeof response == 'object' && response != null && response.result != undefined  ? response.result : response;\n                response.forEach((validator) => validatorSet[validator.consensus_pubkey] = validator)\n            }\n            catch(e){\n                console.log(e, 'methods.blocks.blocksUpdate2');\n            }\n\n            url = LCD+'/staking/validators?status=unbonded';\n\n            try{\n                response = HTTP.get(url);\n                response = typeof response.data != 'undefined' ? response.data : JSON.parse(response.content);\n                response = typeof response == 'object' && response != null && response.result != undefined ? response.result : response;\n                response.forEach((validator) => validatorSet[validator.consensus_pubkey] = validator)\n            }\n            catch(e){\n                console.log(e, 'methods.blocks.blocksUpdate3');\n            }\n            let totalValidators = Object.keys(validatorSet).length;\n            console.log(\"all validators: \"+ totalValidators);\n            for (let height = curr+1 ; height <= until ; height++) {\n                let startBlockTime = new Date();\n                // add timeout here? and outside this loop (for catched up and keep fetching)?\n                this.unblock();\n                let url = RPC+'/block?height=' + height;\n                let analyticsData = {};\n\n                console.log(url);\n                try{\n                    const bulkValidators = Validators.rawCollection().initializeUnorderedBulkOp();\n                    const bulkValidatorRecords = ValidatorRecords.rawCollection().initializeUnorderedBulkOp();\n                    const bulkVPHistory = VotingPowerHistory.rawCollection().initializeUnorderedBulkOp();\n                    const bulkTransations = Transactions.rawCollection().initializeUnorderedBulkOp();\n\n                    let startGetHeightTime = new Date();\n                    let response = HTTP.get(url);\n                    if (response.statusCode == 200){\n                        let block = typeof response.data != 'undefined' ? response.data : JSON.parse(response.content);\n                        block = typeof block == 'object' && block != null && block.result != undefined ? block.result : block;\n                        // store height, hash, numtransaction and time in db\n                        let blockData = {};\n                        blockData.height = height;\n                        blockData.hash = block.block_meta.block_id.hash;\n                        blockData.transNum = block.block_meta.header.num_txs;\n                        blockData.time = new Date(block.block.header.time);\n                        blockData.lastBlockHash = block.block.header.last_block_id.hash;\n                        blockData.proposerAddress = block.block.header.proposer_address;\n                        blockData.validators = [];\n                        let precommits = block.block.last_commit.precommits;\n                        if (precommits != null){\n                            // console.log(precommits.length);\n                            for (let i=0; i<precommits.length; i++){\n                                if (precommits[i] != null){\n                                    blockData.validators.push(precommits[i].validator_address);\n                                }\n                            }\n\n                            analyticsData.precommits = precommits.length;\n                            // record for analytics\n                            // PrecommitRecords.insert({height:height, precommits:precommits.length});\n                        }\n\n                        // save txs in database\n                        if (block.block.data.txs && block.block.data.txs.length > 0){\n                            for (t in block.block.data.txs){\n                                Meteor.call('Transactions.index', sha256(Buffer.from(block.block.data.txs[t], 'base64')), blockData.time, (err, result) => {\n                                    if (err){\n                                        console.log(err, 'methods.blocks.blocksUpdate4');\n                                    }\n                                });\n                            }\n                        }\n\n                        // save double sign evidences\n                        if (block.block.evidence.evidence){\n                            Evidences.insert({\n                                height: height,\n                                evidence: block.block.evidence.evidence\n                            });\n                        }\n\n                        blockData.precommitsCount = blockData.validators.length;\n\n                        analyticsData.height = height;\n\n                        let endGetHeightTime = new Date();\n                        console.log(\"Get height time: \"+((endGetHeightTime-startGetHeightTime)/1000)+\"seconds.\");\n\n\n                        let startGetValidatorsTime = new Date();\n                        // update chain status\n                        url = RPC+'/validators?height='+height;\n                        response = HTTP.get(url);\n                        console.log(url);\n                        let validators = typeof response.data != 'undefined' ? response.data : JSON.parse(response.content);\n                        validators = typeof validators == 'object' && validators != null && validators.result != undefined ? validators.result : validators;\n                        validators.block_height = parseInt(validators.block_height);\n                        ValidatorSets.insert(validators);\n\n                        blockData.validatorsCount = validators.validators.length;\n                        let startBlockInsertTime = new Date();\n                        Blockscon.insert(blockData);\n                        let endBlockInsertTime = new Date();\n                        console.log(\"Block insert time: \"+((endBlockInsertTime-startBlockInsertTime)/1000)+\"seconds.\");\n\n                        // store valdiators exist records\n                        let existingValidators = Validators.find({address:{$exists:true}}).fetch();\n\n                        if (height > 1){\n                            // record precommits and calculate uptime\n                            // only record from block 2\n                            for (i in validators.validators){\n                                let address = validators.validators[i].address;\n                                let record = {\n                                    height: height,\n                                    address: address,\n                                    exists: false,\n                                    voting_power: parseInt(validators.validators[i].voting_power)//getValidatorVotingPower(existingValidators, address)\n                                };\n\n                                for (j in precommits){\n                                    if (precommits[j] != null){\n                                        if (address == precommits[j].validator_address){\n                                            record.exists = true;\n                                            precommits.splice(j,1);\n                                            break;\n                                        }\n                                    }\n                                }\n\n                                // calculate the uptime based on the records stored in previous blocks\n                                // only do this every 15 blocks ~\n\n                                if ((height % 15) == 0){\n                                    // let startAggTime = new Date();\n                                    let numBlocks = Meteor.call('blocks.findUpTime', address);\n                                    let uptime = 0;\n                                    // let endAggTime = new Date();\n                                    // console.log(\"Get aggregated uptime for \"+existingValidators[i].address+\": \"+((endAggTime-startAggTime)/1000)+\"seconds.\");\n                                    if ((numBlocks[0] != null) && (numBlocks[0].uptime != null)){\n                                        uptime = numBlocks[0].uptime;\n                                    }\n\n                                    let base = Meteor.settings.public.uptimeWindow;\n                                    if (height < base){\n                                        base = height;\n                                    }\n\n                                    if (record.exists){\n                                        if (uptime < base){\n                                            uptime++;\n                                        }\n                                        uptime = (uptime / base)*100;\n                                        bulkValidators.find({address:address}).upsert().updateOne({$set:{uptime:uptime, lastSeen:blockData.time}});\n                                    }\n                                    else{\n                                        uptime = (uptime / base)*100;\n                                        bulkValidators.find({address:address}).upsert().updateOne({$set:{uptime:uptime}});\n                                    }\n                                }\n\n                                bulkValidatorRecords.insert(record);\n                                // ValidatorRecords.update({height:height,address:record.address},record);\n                            }\n                        }\n\n                        let chainStatus = Chain.findOne({chainId:block.block_meta.header.chain_id});\n                        let lastSyncedTime = chainStatus?chainStatus.lastSyncedTime:0;\n                        let timeDiff;\n                        let blockTime = Meteor.settings.params.defaultBlockTime;\n                        if (lastSyncedTime){\n                            let dateLatest = blockData.time;\n                            let dateLast = new Date(lastSyncedTime);\n                            timeDiff = Math.abs(dateLatest.getTime() - dateLast.getTime());\n                            blockTime = (chainStatus.blockTime * (blockData.height - 1) + timeDiff) / blockData.height;\n                        }\n\n                        let endGetValidatorsTime = new Date();\n                        console.log(\"Get height validators time: \"+((endGetValidatorsTime-startGetValidatorsTime)/1000)+\"seconds.\");\n\n                        Chain.update({chainId:block.block_meta.header.chain_id}, {$set:{lastSyncedTime:blockData.time, blockTime:blockTime}});\n\n                        analyticsData.averageBlockTime = blockTime;\n                        analyticsData.timeDiff = timeDiff;\n\n                        analyticsData.time = blockData.time;\n\n                        // initialize validator data at first block\n                        // if (height == 1){\n                        //     Validators.remove({});\n                        // }\n\n                        analyticsData.voting_power = 0;\n\n                        let startFindValidatorsNameTime = new Date();\n                        if (validators){\n                            // validators are all the validators in the current height\n                            console.log(\"validatorSet size: \"+validators.validators.length);\n                            for (v in validators.validators){\n                                // Validators.insert(validators.validators[v]);\n                                let validator = validators.validators[v];\n                                validator.voting_power = parseInt(validator.voting_power);\n                                validator.proposer_priority = parseInt(validator.proposer_priority);\n\n                                let valExist = Validators.findOne({\"pub_key.value\":validator.pub_key.value});\n                                if (!valExist){\n                                    console.log(`validator pub_key ${validator.address} ${validator.pub_key.value} not in db`);\n                                    // let command = Meteor.settings.bin.gaiadebug+\" pubkey \"+validator.pub_key.value;\n                                    // console.log(command);\n                                    // let tempVal = validator;\n\n                                    validator.address = getAddress(validator.pub_key);\n                                    validator.accpub = Meteor.call('pubkeyToBech32', validator.pub_key, Meteor.settings.public.bech32PrefixAccPub);\n                                    validator.operator_pubkey = Meteor.call('pubkeyToBech32', validator.pub_key, Meteor.settings.public.bech32PrefixValPub);\n                                    validator.consensus_pubkey = Meteor.call('pubkeyToBech32', validator.pub_key, Meteor.settings.public.bech32PrefixConsPub);\n\n                                    let validatorData = validatorSet[validator.consensus_pubkey]\n                                    if (validatorData){\n                                        if (validatorData.description.identity)\n                                            validator.profile_url =  getValidatorProfileUrl(validatorData.description.identity)\n                                        validator.operator_address = validatorData.operator_address;\n                                        validator.delegator_address = Meteor.call('getDelegator', validatorData.operator_address);\n                                        validator.jailed = validatorData.jailed;\n                                        validator.status = validatorData.status;\n                                        validator.min_self_delegation = validatorData.min_self_delegation;\n                                        validator.tokens = validatorData.tokens;\n                                        validator.delegator_shares = validatorData.delegator_shares;\n                                        validator.description = validatorData.description;\n                                        validator.bond_height = validatorData.bond_height;\n                                        validator.bond_intra_tx_counter = validatorData.bond_intra_tx_counter;\n                                        validator.unbonding_height = validatorData.unbonding_height;\n                                        validator.unbonding_time = validatorData.unbonding_time;\n                                        validator.commission = validatorData.commission;\n                                        validator.self_delegation = validator.delegator_shares;\n                                        // validator.removed = false,\n                                        // validator.removedAt = 0\n                                        // validatorSet.splice(val, 1);\n                                    } else {\n                                        console.log('no con pub key?')\n                                    }\n\n                                    // bulkValidators.insert(validator);\n                                    bulkValidators.find({consensus_pubkey: validator.consensus_pubkey}).upsert().updateOne({$set:validator});\n                                    // console.log(\"validator first appears: \"+bulkValidators.length);\n                                    bulkVPHistory.insert({\n                                        address: validator.address,\n                                        prev_voting_power: 0,\n                                        voting_power: validator.voting_power,\n                                        type: 'add',\n                                        height: blockData.height,\n                                        block_time: blockData.time\n                                    });\n\n                                    // Meteor.call('runCode', command, function(error, result){\n                                    // validator.address = result.match(/\\s[0-9A-F]{40}$/igm);\n                                    // validator.address = validator.address[0].trim();\n                                    // validator.hex = result.match(/\\s[0-9A-F]{64}$/igm);\n                                    // validator.hex = validator.hex[0].trim();\n                                    // validator.cosmosaccpub = result.match(/cosmospub.*$/igm);\n                                    // validator.cosmosaccpub = validator.cosmosaccpub[0].trim();\n                                    // validator.operator_pubkey = result.match(/cosmosvaloperpub.*$/igm);\n                                    // validator.operator_pubkey = validator.operator_pubkey[0].trim();\n                                    // validator.consensus_pubkey = result.match(/cosmosvalconspub.*$/igm);\n                                    // validator.consensus_pubkey = validator.consensus_pubkey[0].trim();\n\n\n\n                                    // });\n                                }\n                                else{\n                                    let validatorData = validatorSet[valExist.consensus_pubkey]\n                                    if (validatorData){\n                                        if (validatorData.description && (!valExist.description || validatorData.description.identity !== valExist.description.identity))\n                                            validator.profile_url =  getValidatorProfileUrl(validatorData.description.identity)\n                                        validator.jailed = validatorData.jailed;\n                                        validator.status = validatorData.status;\n                                        validator.tokens = validatorData.tokens;\n                                        validator.delegator_shares = validatorData.delegator_shares;\n                                        validator.description = validatorData.description;\n                                        validator.bond_height = validatorData.bond_height;\n                                        validator.bond_intra_tx_counter = validatorData.bond_intra_tx_counter;\n                                        validator.unbonding_height = validatorData.unbonding_height;\n                                        validator.unbonding_time = validatorData.unbonding_time;\n                                        validator.commission = validatorData.commission;\n\n                                        // calculate self delegation percentage every 30 blocks\n\n                                        if (height % 30 == 1){\n                                            try{\n                                                let response = HTTP.get(LCD + '/staking/delegators/'+valExist.delegator_address+'/delegations/'+valExist.operator_address);\n\n                                                if (response.statusCode == 200){\n                                                    let selfDelegation = typeof response.data != 'undefined' ? response.data : JSON.parse(response.content);\n                                                    selfDelegation = typeof selfDelegation == 'object' && selfDelegation != null && selfDelegation.result != undefined ? selfDelegation.result : selfDelegation;\n                                                    if (selfDelegation.shares){\n                                                        validator.self_delegation = parseFloat(selfDelegation.shares)/parseFloat(validator.delegator_shares);\n                                                    }\n                                                }\n                                            }\n                                            catch(e){\n                                                // console.log(e);\n                                            }\n                                        }\n\n                                        bulkValidators.find({consensus_pubkey: valExist.consensus_pubkey}).updateOne({$set:validator});\n                                        // console.log(\"validator exisits: \"+bulkValidators.length);\n                                        // validatorSet.splice(val, 1);\n                                    }  else {\n                                        console.log('no con pub key?')\n                                    }\n                                    let prevVotingPower = VotingPowerHistory.findOne({address:validator.address}, {height:-1, limit:1});\n\n                                    if (prevVotingPower){\n                                        if (prevVotingPower.voting_power != validator.voting_power){\n                                            let changeType = (prevVotingPower.voting_power > validator.voting_power)?'down':'up';\n                                            let changeData = {\n                                                address: validator.address,\n                                                prev_voting_power: prevVotingPower.voting_power,\n                                                voting_power: validator.voting_power,\n                                                type: changeType,\n                                                height: blockData.height,\n                                                block_time: blockData.time\n                                            };\n                                            // console.log('voting power changed.');\n                                            // console.log(changeData);\n                                            bulkVPHistory.insert(changeData);\n                                        }\n                                    }\n\n                                }\n\n\n                                // console.log(validator);\n\n                                analyticsData.voting_power += validator.voting_power;\n                            }\n\n                            // if there is validator removed\n\n                            let prevValidators = ValidatorSets.findOne({block_height:height-1});\n\n                            if (prevValidators){\n                                let removedValidators = getRemovedValidators(prevValidators.validators, validators.validators);\n\n                                for (r in removedValidators){\n                                    bulkVPHistory.insert({\n                                        address: removedValidators[r].address,\n                                        prev_voting_power: removedValidators[r].voting_power,\n                                        voting_power: 0,\n                                        type: 'remove',\n                                        height: blockData.height,\n                                        block_time: blockData.time\n                                    });\n                                }\n                            }\n\n                        }\n\n\n                        // check if there's any validator not in db 14400 blocks(~1 day)\n                        if (height % 14400 == 0){\n                            try {\n                                console.log('Checking all validators against db...');\n                                let dbValidators = {};\n                                Validators.find({}, {fields: {consensus_pubkey: 1, status: 1}}\n                                    ).forEach((v) => dbValidators[v.consensus_pubkey] = v.status)\n                                Object.keys(validatorSet).forEach((conPubKey) => {\n                                    let validatorData = validatorSet[conPubKey];\n                                    // Active validators should have been updated in previous steps\n                                    if (validatorData.status === 2)\n                                        return\n\n                                    if (dbValidators[conPubKey] == undefined) {\n                                        console.log(`validator with consensus_pubkey ${conPubKey} not in db`);\n\n                                        validatorData.pub_key = {\n                                            \"type\" : \"tendermint/PubKeyEd25519\",\n                                            \"value\": Meteor.call('bech32ToPubkey', conPubKey)\n                                        };\n                                        validatorData.address = getAddress(validatorData.pub_key);\n                                        validatorData.delegator_address = Meteor.call('getDelegator', validatorData.operator_address);\n\n                                        validatorData.accpub = Meteor.call('pubkeyToBech32', validatorData.pub_key, Meteor.settings.public.bech32PrefixAccPub);\n                                        validatorData.operator_pubkey = Meteor.call('pubkeyToBech32', validatorData.pub_key, Meteor.settings.public.bech32PrefixValPub);\n                                        console.log(JSON.stringify(validatorData))\n                                        bulkValidators.find({consensus_pubkey: conPubKey}).upsert().updateOne({$set:validatorData});\n                                    } else if (dbValidators[conPubKey] == 2) {\n                                        bulkValidators.find({consensus_pubkey: conPubKey}).upsert().updateOne({$set:validatorData});\n                                    }\n                                })\n                            } catch (e){\n                                console.log(e, 'methods.blocks.blocksUpdate5');\n                            }\n                        }\n\n                        // fetching keybase every 14400 blocks(~1 day)\n                        if (height % 14400 == 1){\n                            console.log('Fetching keybase...');\n                            Validators.find({}).forEach((validator) => {\n                                try {\n                                    let profileUrl =  getValidatorProfileUrl(validator.description.identity)\n                                    if (profileUrl) {\n                                        bulkValidators.find({address: validator.address}\n                                            ).upsert().updateOne({$set:{'profile_url':profileUrl}});\n                                    }\n                                } catch (e) {\n                                    console.log(e, 'methods.blocks.blocksUpdate6');\n                                }\n                            })\n                        }\n\n                        let endFindValidatorsNameTime = new Date();\n                        console.log(\"Get validators name time: \"+((endFindValidatorsNameTime-startFindValidatorsNameTime)/1000)+\"seconds.\");\n\n                        // record for analytics\n                        let startAnayticsInsertTime = new Date();\n                        Analytics.insert(analyticsData);\n                        let endAnalyticsInsertTime = new Date();\n                        console.log(\"Analytics insert time: \"+((endAnalyticsInsertTime-startAnayticsInsertTime)/1000)+\"seconds.\");\n\n                        let startVUpTime = new Date();\n                        if (bulkValidators.length > 0){\n                            // console.log(bulkValidators.length);\n                            bulkValidators.execute((err, result) => {\n                                if (err){\n                                    console.log(err, 'methods.blocks.blocksUpdate7');\n                                }\n                                if (result){\n                                    // console.log(result);\n                                }\n                            });\n                        }\n\n                        let endVUpTime = new Date();\n                        console.log(\"Validator update time: \"+((endVUpTime-startVUpTime)/1000)+\"seconds.\");\n\n                        let startVRTime = new Date();\n                        if (bulkValidatorRecords.length > 0){\n                            bulkValidatorRecords.execute((err, result) => {\n                                if (err){\n                                    console.log(err, 'methods.blocks.blocksUpdate26');\n                                }\n                            });\n                        }\n\n                        let endVRTime = new Date();\n                        console.log(\"Validator records update time: \"+((endVRTime-startVRTime)/1000)+\"seconds.\");\n\n                        if (bulkVPHistory.length > 0){\n                            bulkVPHistory.execute((err, result) => {\n                                if (err){\n                                    console.log(err, 'methods.blocks.blocksUpdate8');\n                                }\n                            });\n                        }\n\n                        if (bulkTransations.length > 0){\n                            bulkTransations.execute((err, result) => {\n                                if (err){\n                                    console.log(err, 'methods.blocks.blocksUpdate9');\n                                }\n                            });\n                        }\n\n                        // calculate voting power distribution every 60 blocks ~ 5mins\n\n                        if (height % 60 == 1){\n                            console.log(\"===== calculate voting power distribution =====\");\n                            let activeValidators = Validators.find({status:2,jailed:false},{sort:{voting_power:-1}}).fetch();\n                            let numTopTwenty = Math.ceil(activeValidators.length*0.2);\n                            let numBottomEighty = activeValidators.length - numTopTwenty;\n\n                            let topTwentyPower = 0;\n                            let bottomEightyPower = 0;\n\n                            let numTopThirtyFour = 0;\n                            let numBottomSixtySix = 0;\n                            let topThirtyFourPercent = 0;\n                            let bottomSixtySixPercent = 0;\n\n\n\n                            for (v in activeValidators){\n                                if (v < numTopTwenty){\n                                    topTwentyPower += activeValidators[v].voting_power;\n                                }\n                                else{\n                                    bottomEightyPower += activeValidators[v].voting_power;\n                                }\n\n\n                                if (topThirtyFourPercent < 0.34){\n                                    topThirtyFourPercent += activeValidators[v].voting_power / analyticsData.voting_power;\n                                    numTopThirtyFour++;\n                                }\n                            }\n\n                            bottomSixtySixPercent = 1 - topThirtyFourPercent;\n                            numBottomSixtySix = activeValidators.length - numTopThirtyFour;\n\n                            let vpDist = {\n                                height: height,\n                                numTopTwenty: numTopTwenty,\n                                topTwentyPower: topTwentyPower,\n                                numBottomEighty: numBottomEighty,\n                                bottomEightyPower: bottomEightyPower,\n                                numTopThirtyFour: numTopThirtyFour,\n                                topThirtyFourPercent: topThirtyFourPercent,\n                                numBottomSixtySix: numBottomSixtySix,\n                                bottomSixtySixPercent: bottomSixtySixPercent,\n                                numValidators: activeValidators.length,\n                                totalVotingPower: analyticsData.voting_power,\n                                blockTime: blockData.time,\n                                createAt: new Date()\n                            };\n\n                            console.log(vpDist);\n\n                            VPDistributions.insert(vpDist);\n                        }\n                    }\n                }\n                catch (e){\n                    console.log(e, 'methods.blocks.blocksUpdate10');\n                    SYNCING = false;\n                    return \"Stopped\";\n                }\n                let endBlockTime = new Date();\n                console.log(\"This block used: \"+((endBlockTime-startBlockTime)/1000)+\"seconds.\");\n            }\n            SYNCING = false;\n            Chain.update({chainId:Meteor.settings.public.chainId}, {$set:{lastBlocksSyncedTime:new Date(), totalValidators:totalValidators}});\n        }\n\n        return until;\n    },\n    'addLimit': function(limit) {\n        // console.log(limit+10)\n        return (limit+10);\n    },\n    'hasMore': function(limit) {\n        if (limit > Meteor.call('getCurrentHeight')) {\n            return (false);\n        } else {\n            return (true);\n        }\n    },\n\n    'blockListPagination': function(page, limit, sort_field, sort_order)\n    {\n        let countAll = Blockscon.find().count();\n        let response = {\n            pagination: {\n                total_page: Math.round(countAll / limit),\n                total_record: countAll,\n                current_page: page,\n                from: (page - 1) * limit + 1,\n                to: page * limit\n            }\n        };\n        let offset = page * limit;\n        let data = Blockscon.find({}, { sort: { [sort_field]: (sort_order == 'desc' ? -1 : 1) }, skip: offset, limit: limit }).fetch();\n        response.data = data ? data.map(v => {\n            v.validator = v.proposer();\n            return v;\n        }) : [];\n        return JSON.stringify(response);\n    },\n\n    'blockDetailByHeight': function(height)\n    {\n        let response = {data: {}};\n        let block = Blockscon.find({height: height}).fetch();\n        if(block){\n            response.data = block.map(v => {\n                let transactions = Meteor.call('Transactions.findByHeight', height);\n                v.transactions = transactions ? transactions : [];\n                v.validator = v.proposer();\n                return v;\n            })[0];\n        }\n        return JSON.stringify(response);\n    }\n});\n","import { Meteor } from 'meteor/meteor';\nimport { Blockscon } from '../blocks.js';\nimport { Validators } from '../../validators/validators.js';\nimport { Transactions } from '../../transactions/transactions.js';\n\npublishComposite('blocks.height', function(limit){\n    return {\n        find(){\n            return Blockscon.find({}, {limit: limit, sort: {height: -1}})\n        },\n        children: [\n            {\n                find(block){\n                    return Validators.find(\n                        {address:block.proposerAddress},\n                        {limit:1}\n                    )\n                }\n            }\n        ]\n    }\n});\n\npublishComposite('blocks.findOne', function(height){\n    return {\n        find(){\n            return Blockscon.find({height:height})\n        },\n        children: [\n            {\n                find(block){\n                    return Transactions.find(\n                        {height:block.height}\n                    )\n                }\n            },\n            {\n                find(block){\n                    return Validators.find(\n                        {address:block.proposerAddress},\n                        {limit:1}\n                    )\n                }\n            }\n        ]\n    }\n});\n","import { Mongo } from 'meteor/mongo';\nimport { Validators } from '../validators/validators.js';\n\nexport const Blockscon = new Mongo.Collection('blocks');\n\nBlockscon.helpers({\n    proposer(){\n        return Validators.findOne({address:this.proposerAddress});\n    }\n});\n\n// Blockscon.helpers({\n//     sorted(limit) {\n//         return Blockscon.find({}, {sort: {height:-1}, limit: limit});\n//     }\n// });\n\n\n// Meteor.setInterval(function() {\n//     Meteor.call('blocksUpdate', (error, result) => {\n//         console.log(result);\n//     })\n// }, 30000000);","import { Meteor } from 'meteor/meteor';\nimport { HTTP } from 'meteor/http';\nimport { getAddress } from 'tendermint/lib/pubkey.js';\nimport moment from 'moment';\nimport _ from 'lodash';\nimport { Chain, ChainStates } from '../chain.js';\nimport { Validators } from '../../validators/validators.js';\nimport { VotingPowerHistory } from '../../voting-power/history.js';\n\nfindVotingPower = (validator, genValidators) => {\n    for (let v in genValidators){\n        if (validator.pub_key.value == genValidators[v].pub_key.value){\n            return parseInt(genValidators[v].power);\n        }\n    }\n}\n\nMeteor.methods({\n    'chain.getConsensusState': function(){\n        this.unblock();\n        let url = RPC+'/dump_consensus_state';\n        try{\n            let response = HTTP.get(url);\n            let consensus = typeof response.data != 'undefined' ? response.data : JSON.parse(response.content);\n            consensus = typeof consensus == 'object' && consensus != null && consensus.result != undefined ? consensus.result : consensus;\n            let height = consensus.round_state.height;\n            let round = consensus.round_state.round;\n            let step = consensus.round_state.step;\n            let votedPower = Math.round(parseFloat(consensus.round_state.votes[round].prevotes_bit_array.split(\" \")[3])*100);\n\n            Chain.update({chainId:Meteor.settings.public.chainId}, {$set:{\n                votingHeight: height,\n                votingRound: round,\n                votingStep: step,\n                votedPower: votedPower,\n                proposerAddress: consensus.round_state.validators.proposer.address,\n                prevotes: consensus.round_state.votes[round].prevotes,\n                precommits: consensus.round_state.votes[round].precommits\n            }});\n        }\n        catch(e){\n            console.log(e, 'methods.chain.getConsensusState');\n        }\n    },\n    'chain.updateStatus': function(){\n        this.unblock();\n        let url = RPC+'/status';\n        try{\n            let response = HTTP.get(url);\n            let status = typeof response.data != 'undefined' ? response.data : JSON.parse(response.content);\n            status = typeof status == 'object' && status != null && status.result != undefined ? status.result : status;\n            let chain = {};\n            chain.chainId = status.node_info.network;\n            chain.latestBlockHeight = status.sync_info.latest_block_height;\n            chain.latestBlockTime = status.sync_info.latest_block_time;\n\n            let latestState = ChainStates.findOne({}, {sort: {height: -1}})\n            if (latestState && latestState.height >= chain.latestBlockHeight) {\n                return `no updates (getting block ${chain.latestBlockHeight} at block ${latestState.height})`\n            }\n\n            url = RPC+'/validators';\n            response = HTTP.get(url);\n            let validators = typeof response.data != 'undefined' ? response.data : JSON.parse(response.content);\n            validators = typeof validators == 'object' && validators != null && validators.result != undefined ? validators.result : validators;\n            validators = typeof validators == 'object' && validators != null && validators.validators != undefined ? validators.validators : validators;\n            chain.validators = validators.length;\n            let activeVP = 0;\n            for (v in validators){\n                activeVP += parseInt(validators[v].voting_power);\n            }\n            chain.activeVotingPower = activeVP;\n\n\n            Chain.update({chainId:chain.chainId}, {$set:chain}, {upsert: true});\n            // Get chain states\n            if (parseInt(chain.latestBlockHeight) > 0){\n                let chainStates = {};\n                chainStates.height = parseInt(status.sync_info.latest_block_height);\n                chainStates.time = new Date(status.sync_info.latest_block_time);\n\n                url = LCD + '/staking/pool';\n                try{\n                    response = HTTP.get(url);\n                    let bonding = response.data;\n                    // chain.bondedTokens = bonding.bonded_tokens;\n                    // chain.notBondedTokens = bonding.not_bonded_tokens;\n                    chainStates.bondedTokens = parseInt(bonding.bonded_tokens);\n                    chainStates.notBondedTokens = parseInt(bonding.not_bonded_tokens);\n                }\n                catch(e){\n                    console.log(e, 'chain.updateStatus');\n                }\n\n                url = LCD + '/distribution/community_pool';\n                try {\n                    response = HTTP.get(url);\n                    let pool = typeof response.data != 'undefined' ? response.data : JSON.parse(response.content);\n                    pool = typeof pool == 'object' && pool != null && pool.result != undefined ? pool.result : pool;\n                    if (pool && pool.length > 0){\n                        chainStates.communityPool = [];\n                        pool.forEach((amount, i) => {\n                            chainStates.communityPool.push({\n                                denom: amount.denom,\n                                amount: parseFloat(amount.amount)\n                            })\n                        })\n                    }\n                }\n                catch (e){\n                    console.log(e, 'chain.updateStatus2')\n                }\n\n                url = LCD + '/minting/inflation';\n                try{\n                    response = HTTP.get(url);\n                    let inflation = typeof response.data != 'undefined' ? response.data : JSON.parse(response.content);\n                    inflation = typeof inflation == 'object' && inflation != null && inflation.result != undefined ? inflation.result : inflation;\n                    if (inflation){\n                        chainStates.inflation = parseFloat(inflation)\n                    }\n                }\n                catch(e){\n                    console.log(e, 'chain.updateStatus3');\n                }\n\n                url = LCD + '/minting/annual-provisions';\n                try{\n                    response = HTTP.get(url);\n                    let provisions = typeof response.data != 'undefined' ? response.data : JSON.parse(response.content);\n                    provisions = typeof provisions == 'object' && provisions != null && provisions.result != undefined ? provisions.result : provisions;\n                    if (provisions){\n                        chainStates.annualProvisions = parseFloat(provisions)\n                    }\n                }\n                catch(e){\n                    console.log(e, 'chain.updateStatus4');\n                }\n\n                ChainStates.insert(chainStates);\n            }\n\n            // chain.totalVotingPower = totalVP;\n\n            // validators = Validators.find({}).fetch();\n            // console.log(validators);\n            return chain.latestBlockHeight;\n        }\n        catch (e){\n            console.log(e, 'chain.updateStatus5');\n            return \"Error getting chain status.\";\n        }\n    },\n    'chain.getLatestStatus': function(){\n        Chain.find().sort({created:-1}).limit(1);\n    },\n    'chain.genesis': function(){\n        let chain = Chain.findOne({chainId: Meteor.settings.public.chainId});\n\n        if (chain && chain.readGenesis){\n            console.log('Genesis file has been processed');\n        }\n        else{\n            console.log('=== Start processing genesis file ===');\n            let response = HTTP.get(Meteor.settings.genesisFile);\n            let genesis = typeof response.data != 'undefined' ? response.data : JSON.parse(response.content);\n            genesis = typeof genesis == 'object' && genesis != null && genesis.result != undefined ? genesis.result : genesis;\n            genesis = genesis.genesis;\n            let distr = genesis.app_state.distr || genesis.app_state.distribution\n            let chainParams = {\n                chainId: genesis.chain_id,\n                genesisTime: genesis.genesis_time,\n                consensusParams: genesis.consensus_params,\n                auth: genesis.app_state.auth,\n                bank: genesis.app_state.bank,\n                staking: {\n                    pool: genesis.app_state.staking.pool,\n                    params: genesis.app_state.staking.params\n                },\n                mint: genesis.app_state.mint,\n                distr: {\n                    communityTax: distr.community_tax,\n                    baseProposerReward: distr.base_proposer_reward,\n                    bonusProposerReward: distr.bonus_proposer_reward,\n                    withdrawAddrEnabled: distr.withdraw_addr_enabled\n                },\n                gov: {\n                    startingProposalId: genesis.app_state.gov.starting_proposal_id,\n                    depositParams: genesis.app_state.gov.deposit_params,\n                    votingParams: genesis.app_state.gov.voting_params,\n                    tallyParams: genesis.app_state.gov.tally_params\n                },\n                slashing:{\n                    params: genesis.app_state.slashing.params\n                },\n                supply: genesis.app_state.supply,\n                crisis: genesis.app_state.crisis\n            };\n\n            let totalVotingPower = 0;\n\n            // read gentx\n            if (genesis.app_state.genutil && genesis.app_state.genutil.gentxs && (genesis.app_state.genutil.gentxs.length > 0)){\n                for (i in genesis.app_state.genutil.gentxs){\n                    let msg = genesis.app_state.genutil.gentxs[i].value.msg;\n                    // console.log(msg.type);\n                    for (m in msg){\n                        if (msg[m].type == \"cosmos-sdk/MsgCreateValidator\"){\n                            console.log(msg[m].value);\n                            // let command = Meteor.settings.bin.gaiadebug+\" pubkey \"+msg[m].value.pubkey;\n                            let validator = {\n                                consensus_pubkey: msg[m].value.pubkey,\n                                description: msg[m].value.description,\n                                commission: msg[m].value.commission,\n                                min_self_delegation: msg[m].value.min_self_delegation,\n                                operator_address: msg[m].value.validator_address,\n                                delegator_address: msg[m].value.delegator_address,\n                                voting_power: Math.floor(parseInt(msg[m].value.value.amount) / Meteor.settings.public.stakingFraction),\n                                jailed: false,\n                                status: 2\n                            };\n\n                            totalVotingPower += validator.voting_power;\n\n                            let pubkeyValue = Meteor.call('bech32ToPubkey', msg[m].value.pubkey);\n                            // Validators.upsert({consensus_pubkey:msg[m].value.pubkey},validator);\n\n                            validator.pub_key = {\n                                \"type\":\"tendermint/PubKeyEd25519\",\n                                \"value\":pubkeyValue\n                            };\n\n                            validator.address = getAddress(validator.pub_key);\n                            validator.accpub = Meteor.call('pubkeyToBech32', validator.pub_key, Meteor.settings.public.bech32PrefixAccPub);\n                            validator.operator_pubkey = Meteor.call('pubkeyToBech32', validator.pub_key, Meteor.settings.public.bech32PrefixValPub);\n                            VotingPowerHistory.insert({\n                                address: validator.address,\n                                prev_voting_power: 0,\n                                voting_power: validator.voting_power,\n                                type: 'add',\n                                height: 0,\n                                block_time: genesis.genesis_time\n                            });\n\n                            Validators.insert(validator);\n                        }\n                    }\n                }\n            }\n\n            // read validators from previous chain\n            console.log('read validators from previous chain');\n            if (genesis.app_state.staking.validators && genesis.app_state.staking.validators.length > 0){\n                console.log(genesis.app_state.staking.validators.length);\n                let genValidatorsSet = genesis.app_state.staking.validators;\n                let genValidators = genesis.validators;\n                for (let v in genValidatorsSet){\n                    // console.log(genValidators[v]);\n                    let validator = genValidatorsSet[v];\n                    validator.delegator_address = Meteor.call('getDelegator', genValidatorsSet[v].operator_address);\n\n                    let pubkeyValue = Meteor.call('bech32ToPubkey', validator.consensus_pubkey);\n\n                    validator.pub_key = {\n                        \"type\":\"tendermint/PubKeyEd25519\",\n                        \"value\":pubkeyValue\n                    };\n\n                    validator.address = getAddress(validator.pub_key);\n                    validator.pub_key = validator.pub_key;\n                    validator.accpub = Meteor.call('pubkeyToBech32', validator.pub_key, Meteor.settings.public.bech32PrefixAccPub);\n                    validator.operator_pubkey = Meteor.call('pubkeyToBech32', validator.pub_key, Meteor.settings.public.bech32PrefixValPub);\n\n                    validator.voting_power = findVotingPower(validator, genValidators);\n                    totalVotingPower += validator.voting_power;\n\n                    Validators.upsert({consensus_pubkey:validator.consensus_pubkey},validator);\n                    VotingPowerHistory.insert({\n                        address: validator.address,\n                        prev_voting_power: 0,\n                        voting_power: validator.voting_power,\n                        type: 'add',\n                        height: 0,\n                        block_time: genesis.genesis_time\n                    });\n                }\n            }\n\n            chainParams.readGenesis = true;\n            chainParams.activeVotingPower = totalVotingPower;\n            let result = Chain.upsert({chainId:chainParams.chainId}, {$set:chainParams});\n\n\n            console.log('=== Finished processing genesis file ===');\n\n        }\n\n        return true;\n    },\n    \n    'chainStates.height24hChange': function () {\n        let query = [];\n        let _data = [];\n        for (var i = 1; i <= 24; i++) {\n            _data.push(moment().subtract(i, 'h'));\n            query.push({ time: { $lt: new Date(moment().subtract(i, 'h').toDate()), $gt: new Date(moment().subtract(i, 'h').subtract(1, 'minutes').toDate()) } });\n        }\n        let data = ChainStates.find({\n            $or: query\n        }, { sort: { time: -1 } }).fetch().map(v => {\n            return {\n                bondedTokens: parseInt(v.bondedTokens),\n                notBondedTokens: parseInt(v.notBondedTokens),\n                time: moment(v.time).format('YYYY-MM-DD HH:mm')\n            };\n        });\n        let data_24h = [];\n        _.each(_data, function (v) {\n            let value = _.first(_.filter(data, function (val) {\n                return moment(val.time).format('x') <= v.format('x') && moment(val.time).format('x') >= v.subtract(1, 'minutes').format('x');\n            }));\n            data_24h.push(value);\n        });\n        return data_24h;\n    },\n});\n","import { Meteor } from 'meteor/meteor';\nimport { Chain, ChainStates } from '../chain.js';\nimport { CoinStats } from '../../coin-stats/coin-stats.js';\nimport { Validators } from '../../validators/validators.js';\n\nMeteor.publish('chainStates.latest', function () {\n    return [\n        ChainStates.find({},{sort:{height:-1},limit:1}),\n        CoinStats.find({},{sort:{last_updated_at:-1},limit:1})\n    ];\n});\n\npublishComposite('chain.status', function(){\n    return {\n        find(){\n            return Chain.find({chainId:Meteor.settings.public.chainId});\n        },\n        children: [\n            {\n                find(chain){\n                    return Validators.find(\n                        {},\n                        {fields:{\n                            address:1,\n                            description:1,\n                            operator_address:1,\n                            status:-1,\n                            jailed:1,\n                            profile_url:1\n                        }}\n                    )\n                }\n            }\n        ]\n    }\n});","import { Mongo } from 'meteor/mongo';\nimport { Validators } from '../validators/validators.js';\n\nexport const Chain = new Mongo.Collection('chain');\nexport const ChainStates = new Mongo.Collection('chain_states')\n\nChain.helpers({\n    proposer(){\n        return Validators.findOne({address:this.proposerAddress});\n    }\n})","import { Meteor } from 'meteor/meteor';\nimport _ from 'lodash';\nimport moment from 'moment';\nimport { CoinStats } from '../coin-stats.js';\nimport { HTTP } from 'meteor/http';\n\nMeteor.methods({\n    'coinStats.getCoinStats': function(){\n        this.unblock();\n        let coinId = Meteor.settings.public.coingeckoId;\n        if (coinId){\n            try{\n                let now = new Date();\n                now.setMinutes(0);\n                let url = \"https://api.coingecko.com/api/v3/simple/price?ids=\"+coinId+\"&vs_currencies=usd&include_market_cap=true&include_24hr_vol=true&include_24hr_change=true&include_last_updated_at=true\";\n                let response = HTTP.get(url);\n                if (response.statusCode == 200){\n                    // console.log(JSON.parse(response.content));\n                    let data = typeof response.data != 'undefined' ? response.data : JSON.parse(response.content);\n                    data = typeof data == 'object' && data != null && data.result != undefined ? data.result : data;\n                    data = data[coinId];\n                    // console.log(coinStats);\n                    return CoinStats.upsert({last_updated_at:data.last_updated_at}, {$set:data});\n                }\n            }\n            catch(e){\n                console.log(e, 'methods.coinStats.getCoinStats');\n            }\n        }\n        else{\n            return \"No coingecko Id provided.\"\n        }\n    },\n    'coinStats.getStats': function(){\n        this.unblock();\n        let coinId = Meteor.settings.public.coingeckoId;\n        if (coinId){\n            return (CoinStats.findOne({},{sort:{last_updated_at:-1}}));\n        }\n        else{\n            return \"No coingecko Id provided.\";\n        }\n\n    },\n    'coinStats.price24hChange': function(){\n        let query = [];\n        let _data = [];\n        for (var i = 1; i <= 24; i++) {\n            _data.push(moment().subtract(i, 'h'));\n            query.push({ last_updated_at: { \n                $lt: Math.round(parseInt(moment().subtract(i, 'h').format('x'))/Math.pow(10, 3)), \n                $gt: Math.round(parseInt(moment().subtract(i, 'h').subtract(10, 'minutes').format('x'))/Math.pow(10, 3)) \n            } });\n        }\n        let data = CoinStats.find({\n            $or: query\n        }, { sort: { last_updated_at: -1 } }).fetch().map(v => {\n            return {\n                usd: parseFloat(v.usd),\n                last_updated_at: v.last_updated_at,\n                time: moment.unix(v.last_updated_at).format('YYYY-MM-DD HH:mm')\n            };\n        });\n        let data_24h = [];\n        _.each(_data, function (v) {\n            let value = _.first(_.filter(data, function (val) {\n                return parseInt(val.last_updated_at) <= Math.round(parseInt(v.format('x'))/Math.pow(10, 3)) && parseInt(val.last_updated_at) >= Math.round(parseInt(v.subtract(10, 'minutes').format('x'))/Math.pow(10, 3));\n            }));\n            data_24h.push(value);\n        });\n        return data_24h;\n    }\n});","import { Mongo } from 'meteor/mongo';\n\nexport const CoinStats = new Mongo.Collection('coin_stats');\n","import { Meteor } from 'meteor/meteor';\nimport { Delegations } from '../delegations.js';\nimport { Validators } from '../../validators/validators.js';\n\nMeteor.methods({\n    'delegations.getDelegations': function(){\n        this.unblock();\n        let validators = Validators.find({}).fetch();\n        let delegations = [];\n        console.log(\"=== Getting delegations ===\");\n        for (v in validators){\n            if (validators[v].operator_address){\n                let url = LCD + '/staking/validators/'+validators[v].operator_address+\"/delegations\";\n                try{\n                    let response = HTTP.get(url);\n                    if (response.statusCode == 200){\n                        let delegation = typeof response.data != 'undefined' ? response.data : JSON.parse(response.content);\n                        delegation = typeof delegation != 'object' && delegations != null && delegation.result != undefined ? delegation.result : delegation;\n                        // console.log(delegation);\n                        delegations = delegations.concat(delegation);\n                    }\n                    else{\n                        console.log(response.statusCode, 'methods.delegations.getDelegations1');\n                    }\n                }\n                catch (e){\n                    console.log(e, 'methods.delegations.getDelegations2');\n                }    \n            }\n        }\n\n        for (i in delegations){\n            if (delegations[i] && delegations[i].shares)\n                delegations[i].shares = parseFloat(delegations[i].shares);\n        }\n\n        // console.log(delegations);\n        let data = {\n            delegations: delegations,\n            createdAt: new Date(),\n        };\n\n        return Delegations.insert(data);\n    }\n    // 'blocks.averageBlockTime'(address){\n    //     let blocks = Blockscon.find({proposerAddress:address}).fetch();\n    //     let heights = blocks.map((block, i) => {\n    //         return block.height;\n    //     });\n    //     let blocksStats = Analytics.find({height:{$in:heights}}).fetch();\n    //     // console.log(blocksStats);\n\n    //     let totalBlockDiff = 0;\n    //     for (b in blocksStats){\n    //         totalBlockDiff += blocksStats[b].timeDiff;\n    //     }\n    //     return totalBlockDiff/heights.length;\n    // }\n});","import { Mongo } from 'meteor/mongo';\n\nexport const Delegations = new Mongo.Collection('delegations');\n","import { HTTP } from 'meteor/http';\n\nMeteor.methods({\n    'transaction.submit': function(txInfo) {\n        const url = `${LCD}/txs`;\n        data = {\n            \"tx\": txInfo.value,\n            \"mode\": \"sync\"\n        }\n        const timestamp = new Date().getTime();\n        console.log(`submitting transaction${timestamp} ${url} with data ${JSON.stringify(data)}`)\n\n        let response = HTTP.post(url, {data});\n        console.log(`response for transaction${timestamp} ${url}: ${JSON.stringify(response)}`)\n        if (response.statusCode == 200) {\n            let data = response.data\n            if (data.code)\n                throw new Meteor.Error(data.code, JSON.parse(data.raw_log).message)\n            return response.data.txhash;\n        }\n    },\n    'transaction.execute': function(body, path) {\n        const url = `${LCD}/${path}`;\n        data = {\n            \"base_req\": {\n                ...body,\n                \"chain_id\": Meteor.settings.public.chainId,\n                \"simulate\": false\n            }\n        };\n        let response = HTTP.post(url, {data});\n        if (response.statusCode == 200) {\n            return typeof response.data != 'undefined' ? response.data : JSON.parse(response.content);\n        }\n    },\n    'transaction.simulate': function(txMsg, from, path, adjustment='1.2') {\n        const url = `${LCD}/${path}`;\n        data = {...txMsg,\n            \"base_req\": {\n                \"from\": from,\n                \"chain_id\": Meteor.settings.public.chainId,\n                \"gas_adjustment\": adjustment,\n                \"simulate\": true\n            }\n        };\n        let response = HTTP.post(url, {data});\n        if (response.statusCode == 200) {\n            return typeof response.data != 'undefined' ? response.data.gas_estimate : JSON.parse(response.content).gas_estimate;\n        }\n    },\n})","import { Meteor } from 'meteor/meteor';\nimport { HTTP } from 'meteor/http';\nimport { Proposals } from '../proposals.js';\nimport { Validators } from '../../validators/validators.js';\n// import { Promise } from 'meteor/promise';\n\nMeteor.methods({\n    'proposals.getProposals': function(){\n        this.unblock();\n        try{\n            let url = LCD + '/gov/proposals';\n            let response = HTTP.get(url);\n            let proposals = typeof response.data != 'undefined' ? response.data : JSON.parse(response.content);\n            proposals = typeof proposals == 'object' && proposals != null && proposals.result != undefined ? proposals.result : proposals;\n\n            let finishedProposalIds = new Set(Proposals.find(\n                {\"proposal_status\":{$in:[\"Passed\", \"Rejected\", \"Removed\"]}}\n            ).fetch().map((p)=> p.proposalId));\n\n            let proposalIds = [];\n            if (proposals.length > 0){\n                // Proposals.upsert()\n                const bulkProposals = Proposals.rawCollection().initializeUnorderedBulkOp();\n                for (let i in proposals){\n                    let proposal = proposals[i];\n                    proposal.proposalId = parseInt(proposal.proposal_id);\n                    if (proposal.proposalId > 0 && !finishedProposalIds.has(proposal.proposalId)) {\n                        try{\n                            let url = LCD + '/gov/proposals/'+proposal.proposalId+'/proposer';\n                            let response = HTTP.get(url);\n                            if (response.statusCode == 200){\n                                let proposer = typeof response.data != 'undefined' ? response.data : JSON.parse(response.content);\n                                proposer = typeof proposer == 'object' && proposer != null && proposer.result != undefined ? proposer.result : proposer;\n                                if (proposer.proposal_id && (proposer.proposal_id == proposal.proposal_id)){\n                                    proposal.proposer = proposer.proposer;\n                                }\n                            }\n                            bulkProposals.find({proposalId: proposal.proposalId}).upsert().updateOne({$set:proposal});\n                            proposalIds.push(proposal.proposalId);\n                        }\n                        catch(e){\n                            bulkProposals.find({proposalId: proposal.proposalId}).upsert().updateOne({$set:proposal});\n                            proposalIds.push(proposal.proposalId);\n                            console.log(e.response.content, 'proposals.getProposals1');\n                        }\n                    }\n                }\n                bulkProposals.find({proposalId:{$nin:proposalIds}, proposal_status:{$nin:[\"Passed\", \"Rejected\", \"Removed\"]}})\n                    .update({$set: {\"proposal_status\": \"Removed\"}});\n                bulkProposals.execute();\n            }\n            return true\n        }\n        catch (e){\n            console.log(e, 'proposals.getProposals2');\n        }\n    },\n    'proposals.getProposalResults': function(){\n        this.unblock();\n        let proposals = Proposals.find({\"proposal_status\":{$nin:[\"Passed\", \"Rejected\", \"Removed\"]}}).fetch();\n\n        if (proposals && (proposals.length > 0)){\n            for (let i in proposals){\n                if (parseInt(proposals[i].proposalId) > 0){\n                    try{\n                        // get proposal deposits\n                        let url = LCD + '/gov/proposals/'+proposals[i].proposalId+'/deposits';\n                        let response = HTTP.get(url);\n                        let proposal = {proposalId: proposals[i].proposalId};\n                        if (response.statusCode == 200){\n                            let deposits = typeof response.data != 'undefined' ? response.data : JSON.parse(response.content);\n                            deposits = typeof deposits == 'object' && deposits != null && deposits.result != undefined ? deposits.result : deposits;\n                            proposal.deposits = deposits;\n                        }\n\n                        url = LCD + '/gov/proposals/'+proposals[i].proposalId+'/votes';\n                        response = HTTP.get(url);\n                        if (response.statusCode == 200){\n                            let votes = typeof response.data != 'undefined' ? response.data : JSON.parse(response.content);\n                            votes = typeof votes == 'object' && votes != null && votes.result != undefined ? votes.result : votes;\n                            proposal.votes = getVoteDetail(votes);\n                        }\n\n                        url = LCD + '/gov/proposals/'+proposals[i].proposalId+'/tally';\n                        response = HTTP.get(url);\n                        if (response.statusCode == 200){\n                            let tally = typeof response.data != 'undefined' ? response.data : JSON.parse(response.content);\n                            tally = typeof tally == 'object' && tally != null && tally.result != undefined ? tally.result : tally;\n                            proposal.tally = tally;\n                        }\n\n                        proposal.updatedAt = new Date();\n                        Proposals.update({proposalId: proposals[i].proposalId}, {$set:proposal});\n                    }\n                    catch(e){\n\n                    }\n                }\n            }\n        }\n        return true\n    },\n    'proposals.all': function(){\n        return JSON.stringify(Proposals.find({}, {sort: {proposalId: -1}}).fetch());\n    },\n    'proposals.proposalById': function(id){\n        return JSON.stringify(Proposals.find({proposal_id: id}, {limit: 1}).fetch());\n    }\n});\n\nconst getVoteDetail = (votes) => {\n    if (!votes) {\n        return [];\n    }\n\n    let voters = votes.map((vote) => vote.voter);\n    let votingPowerMap = {};\n    let validatorAddressMap = {};\n    Validators.find({delegator_address: {$in: voters}}).forEach((validator) => {\n        votingPowerMap[validator.delegator_address] = {\n            moniker: validator.description.moniker,\n            address: validator.address,\n            tokens: parseFloat(validator.tokens),\n            delegatorShares: parseFloat(validator.delegator_shares),\n            deductedShares: parseFloat(validator.delegator_shares)\n        };\n        validatorAddressMap[validator.operator_address] = validator.delegator_address;\n    });\n    voters.forEach((voter) => {\n        if (!votingPowerMap[voter]) {\n            // voter is not a validator\n            let url = `${LCD}/staking/delegators/${voter}/delegations`;\n            let delegations;\n            let votingPower = 0;\n            try{\n                let response = HTTP.get(url);\n                if (response.statusCode == 200){\n                    delegations = typeof response.data != 'undefined' ? response.data : JSON.parse(response.content);\n                    delegations = typeof delegations == 'object' && delegations != null && delegations.result != undefined ? delegations.result : delegations;\n                    if (delegations && delegations.length > 0) {\n                        delegations.forEach((delegation) => {\n                            let shares = parseFloat(delegation.shares);\n                            if (validatorAddressMap[delegation.validator_address]) {\n                                // deduct delegated shareds from validator if a delegator votes\n                                let validator = votingPowerMap[validatorAddressMap[delegation.validator_address]];\n                                validator.deductedShares -= shares;\n                                if (validator.delegator_shares != 0){ // avoiding division by zero\n                                    votingPower += (shares/validator.delegatorShares) * validator.tokens;\n                                }\n\n                            } else {\n                                let validator = Validators.findOne({operator_address: delegation.validator_address});\n                                if (validator && validator.delegator_shares != 0){ // avoiding division by zero\n                                    votingPower += (shares/parseFloat(validator.delegator_shares)) * parseFloat(validator.tokens);\n                                }\n                            }\n                        });\n                    }\n                }\n            }\n            catch (e){\n                console.log(e, 'methods.proposals.getVoteDetail');\n            }\n            votingPowerMap[voter] = {votingPower: votingPower};\n        }\n    });\n    return votes.map((vote) => {\n        let voter = votingPowerMap[vote.voter];\n        let votingPower = voter.votingPower;\n        if (votingPower == undefined) {\n            // voter is a validator\n            votingPower = voter.delegatorShares?((voter.deductedShares/voter.delegatorShares) * voter.tokens):0;\n        }\n        return {...vote, votingPower};\n    });\n}\n","import { Meteor } from 'meteor/meteor';\nimport { Proposals } from '../proposals.js';\nimport { check } from 'meteor/check'\n\nMeteor.publish('proposals.list', function () {\n    return Proposals.find({}, {sort:{proposalId:-1}});\n});\n\nMeteor.publish('proposals.one', function (id){\n    check(id, Number);\n    return Proposals.find({proposalId:id});\n})","import { Mongo } from 'meteor/mongo';\n\nexport const Proposals = new Mongo.Collection('proposals');\n","import { Meteor } from 'meteor/meteor';\nimport { Mongo } from 'meteor/mongo';\nimport { ValidatorRecords, Analytics, AverageData, AverageValidatorData } from '../records.js';\nimport { Validators } from '../../validators/validators.js';\nimport { ValidatorSets } from '/imports/api/validator-sets/validator-sets.js';\nimport { Status } from '../../status/status.js';\nimport { MissedBlocksStats } from '../records.js';\nimport { MissedBlocks } from '../records.js';\nimport { Blockscon } from '../../blocks/blocks.js';\nimport { Chain } from '../../chain/chain.js';\nimport _ from 'lodash';\nconst BULKUPDATEMAXSIZE = 1000;\n\nconst getBlockStats = (startHeight, latestHeight) => {\n    let blockStats = {};\n    const cond = {$and: [\n        { height: { $gt: startHeight } },\n        { height: { $lte: latestHeight } } ]};\n    const options = {sort:{height: 1}};\n    Blockscon.find(cond, options).forEach((block) => {\n        blockStats[block.height] = {\n            height: block.height,\n            proposerAddress: block.proposerAddress,\n            precommitsCount: block.precommitsCount,\n            validatorsCount: block.validatorsCount,\n            validators: block.validators,\n            time: block.time\n        }\n    });\n\n    Analytics.find(cond, options).forEach((block) => {\n        if (!blockStats[block.height]) {\n            blockStats[block.height] = { height: block.height };\n            console.log(`block ${block.height} does not have an entry`);\n        }\n        _.assign(blockStats[block.height], {\n            precommits: block.precommits,\n            averageBlockTime: block.averageBlockTime,\n            timeDiff: block.timeDiff,\n            voting_power: block.voting_power\n        });\n    });\n    return blockStats;\n}\n\nconst getPreviousRecord = (voterAddress, proposerAddress) => {\n    let previousRecord = MissedBlocks.findOne(\n        {voter:voterAddress, proposer:proposerAddress, blockHeight: -1});\n    let lastUpdatedHeight = Meteor.settings.params.startHeight;\n    let prevStats = {};\n    if (previousRecord) {\n        prevStats = _.pick(previousRecord, ['missCount', 'totalCount']);\n    } else {\n        prevStats = {\n            missCount: 0,\n            totalCount: 0\n        }\n    }\n    return prevStats;\n}\n\nMeteor.methods({\n    'ValidatorRecords.calculateMissedBlocks': function(){\n        if (!COUNTMISSEDBLOCKS){\n            try {\n                let startTime = Date.now();\n                COUNTMISSEDBLOCKS = true;\n                console.log('calulate missed blocks count');\n                this.unblock();\n                let validators = Validators.find({}).fetch();\n                let latestHeight = Meteor.call('blocks.getCurrentHeight');\n                let explorerStatus = Status.findOne({chainId: Meteor.settings.public.chainId});\n                let startHeight = (explorerStatus&&explorerStatus.lastProcessedMissedBlockHeight)?explorerStatus.lastProcessedMissedBlockHeight:Meteor.settings.params.startHeight;\n                latestHeight = Math.min(startHeight + BULKUPDATEMAXSIZE, latestHeight);\n                const bulkMissedStats = MissedBlocks.rawCollection().initializeOrderedBulkOp();\n\n                let validatorsMap = {};\n                validators.forEach((validator) => validatorsMap[validator.address] = validator);\n\n                // a map of block height to block stats\n                let blockStats = getBlockStats(startHeight, latestHeight);\n\n                // proposerVoterStats is a proposer-voter map counting numbers of proposed blocks of which voter is an active validator\n                let proposerVoterStats = {}\n\n                _.forEach(blockStats, (block, blockHeight) => {\n                    let proposerAddress = block.proposerAddress;\n                    let votedValidators = new Set(block.validators);\n                    let validatorSets = ValidatorSets.findOne({block_height:block.height});\n                    let votedVotingPower = 0;\n\n                    validatorSets.validators.forEach((activeValidator) => {\n                        if (votedValidators.has(activeValidator.address))\n                            votedVotingPower += parseFloat(activeValidator.voting_power)\n                    })\n\n                    validatorSets.validators.forEach((activeValidator) => {\n                        let currentValidator = activeValidator.address\n                        if (!_.has(proposerVoterStats, [proposerAddress, currentValidator])) {\n                            let prevStats = getPreviousRecord(currentValidator, proposerAddress);\n                            _.set(proposerVoterStats, [proposerAddress, currentValidator], prevStats);\n                        }\n\n                        _.update(proposerVoterStats, [proposerAddress, currentValidator, 'totalCount'], (n) => n+1);\n                        if (!votedValidators.has(currentValidator)) {\n                            _.update(proposerVoterStats, [proposerAddress, currentValidator, 'missCount'], (n) => n+1);\n                            bulkMissedStats.insert({\n                                voter: currentValidator,\n                                blockHeight: block.height,\n                                proposer: proposerAddress,\n                                precommitsCount: block.precommitsCount,\n                                validatorsCount: block.validatorsCount,\n                                time: block.time,\n                                precommits: block.precommits,\n                                averageBlockTime: block.averageBlockTime,\n                                timeDiff: block.timeDiff,\n                                votingPower: block.voting_power,\n                                votedVotingPower,\n                                updatedAt: latestHeight,\n                                missCount: _.get(proposerVoterStats, [proposerAddress, currentValidator, 'missCount']),\n                                totalCount: _.get(proposerVoterStats, [proposerAddress, currentValidator, 'totalCount'])\n                            });\n                        }\n                    })\n                });\n\n                _.forEach(proposerVoterStats, (voters, proposerAddress) => {\n                    _.forEach(voters, (stats, voterAddress) => {\n                        bulkMissedStats.find({\n                            voter: voterAddress,\n                            proposer: proposerAddress,\n                            blockHeight: -1\n                        }).upsert().updateOne({$set: {\n                            voter: voterAddress,\n                            proposer: proposerAddress,\n                            blockHeight: -1,\n                            updatedAt: latestHeight,\n                            missCount: _.get(stats, 'missCount'),\n                            totalCount: _.get(stats, 'totalCount')\n                        }});\n                    });\n                });\n\n                let message = '';\n                if (bulkMissedStats.length > 0){\n                    const client = MissedBlocks._driver.mongo.client;\n                    // TODO: add transaction back after replica set(#146) is set up\n                    // let session = client.startSession();\n                    // session.startTransaction();\n                    let bulkPromise = bulkMissedStats.execute(null/*, {session}*/).then(\n                        Meteor.bindEnvironment((result, err) => {\n                            if (err){\n                                COUNTMISSEDBLOCKS = false;\n                                // Promise.await(session.abortTransaction());\n                                throw err;\n                            }\n                            if (result){\n                                // Promise.await(session.commitTransaction());\n                                message = `(${result.result.nInserted} inserted, ` +\n                                           `${result.result.nUpserted} upserted, ` +\n                                           `${result.result.nModified} modified)`;\n                            }\n                        }));\n\n                    Promise.await(bulkPromise);\n                }\n\n                COUNTMISSEDBLOCKS = false;\n                Status.upsert({chainId: Meteor.settings.public.chainId}, {$set:{lastProcessedMissedBlockHeight:latestHeight, lastProcessedMissedBlockTime: new Date()}});\n                return `done in ${Date.now() - startTime}ms ${message}`;\n            } catch (e) {\n                COUNTMISSEDBLOCKS = false;\n                throw e;\n            }\n        }\n        else{\n            return \"updating...\";\n        }\n    },\n    'ValidatorRecords.calculateMissedBlocksStats': function(){\n        // TODO: deprecate this method and MissedBlocksStats collection\n        // console.log(\"ValidatorRecords.calculateMissedBlocks: \"+COUNTMISSEDBLOCKS);\n        if (!COUNTMISSEDBLOCKSSTATS){\n            COUNTMISSEDBLOCKSSTATS = true;\n            console.log('calulate missed blocks stats');\n            this.unblock();\n            let validators = Validators.find({}).fetch();\n            let latestHeight = Meteor.call('blocks.getCurrentHeight');\n            let explorerStatus = Status.findOne({chainId: Meteor.settings.public.chainId});\n            let startHeight = (explorerStatus&&explorerStatus.lastMissedBlockHeight)?explorerStatus.lastMissedBlockHeight:Meteor.settings.params.startHeight;\n            // console.log(latestHeight);\n            // console.log(startHeight);\n            const bulkMissedStats = MissedBlocksStats.rawCollection().initializeUnorderedBulkOp();\n            for (i in validators){\n                // if ((validators[i].address == \"B8552EAC0D123A6BF609123047A5181D45EE90B5\") || (validators[i].address == \"69D99B2C66043ACBEAA8447525C356AFC6408E0C\") || (validators[i].address == \"35AD7A2CD2FC71711A675830EC1158082273D457\")){\n                let voterAddress = validators[i].address;\n                let missedRecords = ValidatorRecords.find({\n                    address:voterAddress,\n                    exists:false,\n                    $and: [ { height: { $gt: startHeight } }, { height: { $lte: latestHeight } } ]\n                }).fetch();\n\n                let counts = {};\n\n                // console.log(\"missedRecords to process: \"+missedRecords.length);\n                for (b in missedRecords){\n                    let block = Blockscon.findOne({height:missedRecords[b].height});\n                    let existingRecord = MissedBlocksStats.findOne({voter:voterAddress, proposer:block.proposerAddress});\n\n                    if (typeof counts[block.proposerAddress] === 'undefined'){\n                        if (existingRecord){\n                            counts[block.proposerAddress] = existingRecord.count+1;\n                        }\n                        else{\n                            counts[block.proposerAddress] = 1;\n                        }\n                    }\n                    else{\n                        counts[block.proposerAddress]++;\n                    }\n                }\n\n                for (address in counts){\n                    let data = {\n                        voter: voterAddress,\n                        proposer:address,\n                        count: counts[address]\n                    }\n\n                    bulkMissedStats.find({voter:voterAddress, proposer:address}).upsert().updateOne({$set:data});\n                }\n                // }\n\n            }\n\n            if (bulkMissedStats.length > 0){\n                bulkMissedStats.execute(Meteor.bindEnvironment((err, result) => {\n                    if (err){\n                        COUNTMISSEDBLOCKSSTATS = false;\n                        console.log(err, 'methods.records.ValidatorRecords.calculateMissedBlocksStats');\n                    }\n                    if (result){\n                        Status.upsert({chainId: Meteor.settings.public.chainId}, {$set:{lastMissedBlockHeight:latestHeight, lastMissedBlockTime: new Date()}});\n                        COUNTMISSEDBLOCKSSTATS = false;\n                        console.log(\"done\");\n                    }\n                }));\n            }\n            else{\n                COUNTMISSEDBLOCKSSTATS = false;\n            }\n\n            return true;\n        }\n        else{\n            return \"updating...\";\n        }\n    },\n    'Analytics.aggregateBlockTimeAndVotingPower': function(time){\n        this.unblock();\n        let now = new Date();\n\n        if (time == 'm'){\n            let averageBlockTime = 0;\n            let averageVotingPower = 0;\n\n            let analytics = Analytics.find({ \"time\": { $gt: new Date(Date.now() - 60 * 1000) } }).fetch();\n            if (analytics.length > 0){\n                for (i in analytics){\n                    averageBlockTime += analytics[i].timeDiff;\n                    averageVotingPower += analytics[i].voting_power;\n                }\n                averageBlockTime = averageBlockTime / analytics.length;\n                averageVotingPower = averageVotingPower / analytics.length;\n\n                Chain.update({chainId:Meteor.settings.public.chainId},{$set:{lastMinuteVotingPower:averageVotingPower, lastMinuteBlockTime:averageBlockTime}});\n                AverageData.insert({\n                    averageBlockTime: averageBlockTime,\n                    averageVotingPower: averageVotingPower,\n                    type: time,\n                    createdAt: now\n                })\n            }\n        }\n        if (time == 'h'){\n            let averageBlockTime = 0;\n            let averageVotingPower = 0;\n            let analytics = Analytics.find({ \"time\": { $gt: new Date(Date.now() - 60*60 * 1000) } }).fetch();\n            if (analytics.length > 0){\n                for (i in analytics){\n                    averageBlockTime += analytics[i].timeDiff;\n                    averageVotingPower += analytics[i].voting_power;\n                }\n                averageBlockTime = averageBlockTime / analytics.length;\n                averageVotingPower = averageVotingPower / analytics.length;\n\n                Chain.update({chainId:Meteor.settings.public.chainId},{$set:{lastHourVotingPower:averageVotingPower, lastHourBlockTime:averageBlockTime}});\n                AverageData.insert({\n                    averageBlockTime: averageBlockTime,\n                    averageVotingPower: averageVotingPower,\n                    type: time,\n                    createdAt: now\n                })\n            }\n        }\n\n        if (time == 'd'){\n            let averageBlockTime = 0;\n            let averageVotingPower = 0;\n            let analytics = Analytics.find({ \"time\": { $gt: new Date(Date.now() - 24*60*60 * 1000) } }).fetch();\n            if (analytics.length > 0){\n                for (i in analytics){\n                    averageBlockTime += analytics[i].timeDiff;\n                    averageVotingPower += analytics[i].voting_power;\n                }\n                averageBlockTime = averageBlockTime / analytics.length;\n                averageVotingPower = averageVotingPower / analytics.length;\n\n                Chain.update({chainId:Meteor.settings.public.chainId},{$set:{lastDayVotingPower:averageVotingPower, lastDayBlockTime:averageBlockTime}});\n                AverageData.insert({\n                    averageBlockTime: averageBlockTime,\n                    averageVotingPower: averageVotingPower,\n                    type: time,\n                    createdAt: now\n                })\n            }\n        }\n\n        // return analytics.length;\n    },\n    'Analytics.aggregateValidatorDailyBlockTime': function(){\n        this.unblock();\n        let validators = Validators.find({}).fetch();\n        let now = new Date();\n        for (i in validators){\n            let averageBlockTime = 0;\n\n            let blocks = Blockscon.find({proposerAddress:validators[i].address, \"time\": { $gt: new Date(Date.now() - 24*60*60 * 1000) }}, {fields:{height:1}}).fetch();\n\n            if (blocks.length > 0){\n                let blockHeights = [];\n                for (b in blocks){\n                    blockHeights.push(blocks[b].height);\n                }\n\n                let analytics = Analytics.find({height: {$in:blockHeights}}, {fields:{height:1,timeDiff:1}}).fetch();\n\n\n                for (a in analytics){\n                    averageBlockTime += analytics[a].timeDiff;\n                }\n\n                averageBlockTime = averageBlockTime / analytics.length;\n            }\n\n            AverageValidatorData.insert({\n                proposerAddress: validators[i].address,\n                averageBlockTime: averageBlockTime,\n                type: 'ValidatorDailyAverageBlockTime',\n                createdAt: now\n            })\n        }\n\n        return true;\n    }\n})\n","import { Meteor } from 'meteor/meteor';\nimport { ValidatorRecords, Analytics, MissedBlocks, MissedBlocksStats, VPDistributions } from '../records.js';\nimport { Validators } from '../../validators/validators.js';\n\nMeteor.publish('validator_records.all', function () {\n    return ValidatorRecords.find();\n});\n\nMeteor.publish('validator_records.uptime', function(address, num){\n    return ValidatorRecords.find({address:address},{limit:num, sort:{height:-1}});\n});\n\nMeteor.publish('analytics.history', function(){\n    return Analytics.find({},{sort:{height:-1},limit:50});\n});\n\nMeteor.publish('vpDistribution.latest', function(){\n    return VPDistributions.find({},{sort:{height:-1}, limit:1});\n});\n\npublishComposite('missedblocks.validator', function(address, type){\n    let conditions = {};\n    if (type == 'voter'){\n        conditions = {\n            voter: address\n        }\n    }\n    else{\n        conditions = {\n            proposer: address\n        }\n    }\n    return {\n        find(){\n            return MissedBlocksStats.find(conditions)\n        },\n        children: [\n            {\n                find(stats){\n                    return Validators.find(\n                        {},\n                        {fields:{address:1, description:1, profile_url:1}}\n                    )\n                }\n            }\n        ]\n    }\n});\n\npublishComposite('missedrecords.validator', function(address, type){\n    return {\n        find(){\n            return MissedBlocks.find(\n                {[type]: address},\n                {sort: {updatedAt: -1}}\n            )\n        },\n        children: [\n            {\n                find(){\n                    return Validators.find(\n                        {},\n                        {fields:{address:1, description:1, operator_address:1}}\n                    )\n                }\n            }\n        ]\n    }\n});\n","import { Mongo } from 'meteor/mongo';\nimport { Validators } from '../validators/validators';\n\nexport const ValidatorRecords = new Mongo.Collection('validator_records');\nexport const Analytics = new Mongo.Collection('analytics');\nexport const MissedBlocksStats = new Mongo.Collection('missed_blocks_stats');\nexport const MissedBlocks = new  Mongo.Collection('missed_blocks');\nexport const VPDistributions = new Mongo.Collection('voting_power_distributions');\nexport const AverageData = new Mongo.Collection('average_data');\nexport const AverageValidatorData = new Mongo.Collection('average_validator_data');\n\nMissedBlocksStats.helpers({\n    proposerMoniker(){\n        let validator = Validators.findOne({address:this.proposer});\n        return (validator.description)?validator.description.moniker:this.proposer;\n    },\n    voterMoniker(){\n        let validator = Validators.findOne({address:this.voter});\n        return (validator.description)?validator.description.moniker:this.voter;\n    }\n})\n","import { Meteor } from 'meteor/meteor';\nimport { Status } from '../status.js';\nimport { check } from 'meteor/check'\n\nMeteor.publish('status.status', function () {\n    return Status.find({chainId:Meteor.settings.public.chainId});\n});\n\n","import { Mongo } from 'meteor/mongo';\n\nexport const Status = new Mongo.Collection('status');","import { Meteor } from 'meteor/meteor';\nimport { HTTP } from 'meteor/http';\nimport { Transactions } from '../../transactions/transactions.js';\nimport { Validators } from '../../validators/validators.js';\nimport { VotingPowerHistory } from '../../voting-power/history.js';\n\nconst AddressLength = 40;\n\nMeteor.methods({\n    'Transactions.index': function(hash, blockTime){\n        this.unblock();\n        hash = hash.toUpperCase();\n        let url = LCD+ '/txs/'+hash;\n        let response = HTTP.get(url);\n        let tx = typeof response.data != 'undefined' ? response.data : JSON.parse(response.content);\n        tx = typeof tx == 'object' && tx != null && tx.result != undefined ? tx.result : tx;\n\n        console.log(hash, 'methods.transaction.Transactions.index');\n\n        tx.height = parseInt(tx.height);\n\n        // if (!tx.code){\n        //     let msg = tx.tx.value.msg;\n        //     for (let m in msg){\n        //         if (msg[m].type == \"cosmos-sdk/MsgCreateValidator\"){\n        //             console.log(msg[m].value);\n        //             let command = Meteor.settings.bin.gaiadebug+\" pubkey \"+msg[m].value.pubkey;\n        //             let validator = {\n        //                 consensus_pubkey: msg[m].value.pubkey,\n        //                 description: msg[m].value.description,\n        //                 commission: msg[m].value.commission,\n        //                 min_self_delegation: msg[m].value.min_self_delegation,\n        //                 operator_address: msg[m].value.validator_address,\n        //                 delegator_address: msg[m].value.delegator_address,\n        //                 voting_power: Math.floor(parseInt(msg[m].value.value.amount) / 1000000)\n        //             }\n\n        //             Meteor.call('runCode', command, function(error, result){\n        //                 validator.address = result.match(/\\s[0-9A-F]{40}$/igm);\n        //                 validator.address = validator.address[0].trim();\n        //                 validator.hex = result.match(/\\s[0-9A-F]{64}$/igm);\n        //                 validator.hex = validator.hex[0].trim();\n        //                 validator.pub_key = result.match(/{\".*\"}/igm);\n        //                 validator.pub_key = JSON.parse(validator.pub_key[0].trim());\n        //                 let re = new RegExp(Meteor.settings.public.bech32PrefixAccPub+\".*$\",\"igm\");\n        //                 validator.cosmosaccpub = result.match(re);\n        //                 validator.cosmosaccpub = validator.cosmosaccpub[0].trim();\n        //                 re = new RegExp(Meteor.settings.public.bech32PrefixValPub+\".*$\",\"igm\");\n        //                 validator.operator_pubkey = result.match(re);\n        //                 validator.operator_pubkey = validator.operator_pubkey[0].trim();\n\n        //                 Validators.upsert({consensus_pubkey:msg[m].value.pubkey},validator);\n        //                 VotingPowerHistory.insert({\n        //                     address: validator.address,\n        //                     prev_voting_power: 0,\n        //                     voting_power: validator.voting_power,\n        //                     type: 'add',\n        //                     height: tx.height+2,\n        //                     block_time: blockTime\n        //                 });\n        //             })\n        //         }\n        //     }\n        // }\n\n\n        let txId = Transactions.insert(tx);\n        if (txId){\n            return txId;\n        }\n        else return false;\n    },\n    'Transactions.findDelegation': function(address, height){\n        // following cosmos-sdk/x/slashing/spec/06_events.md and cosmos-sdk/x/staking/spec/06_events.md\n        return Transactions.find({\n            $or: [{$and: [\n                {\"events.type\": \"delegate\"},\n                {\"events.attributes.key\": \"validator\"},\n                {\"events.attributes.value\": address}\n            ]}, {$and:[\n                {\"events.attributes.key\": \"action\"},\n                {\"events.attributes.value\": \"unjail\"},\n                {\"events.attributes.key\": \"sender\"},\n                {\"events.attributes.value\": address}\n            ]}, {$and:[\n                {\"events.type\": \"create_validator\"},\n                {\"events.attributes.key\": \"validator\"},\n                {\"events.attributes.value\": address}\n            ]}, {$and:[\n                {\"events.type\": \"unbond\"},\n                {\"events.attributes.key\": \"validator\"},\n                {\"events.attributes.value\": address}\n            ]}, {$and:[\n                {\"events.type\": \"redelegate\"},\n                {\"events.attributes.key\": \"destination_validator\"},\n                {\"events.attributes.value\": address}\n            ]}],\n            \"code\": {$exists: false},\n            height:{$lt:height}},\n        {sort:{height:-1},\n            limit: 1}\n        ).fetch();\n    },\n    'Transactions.findUser': function(address, fields=null){\n        // address is either delegator address or validator operator address\n        let validator;\n        if (!fields)\n            fields = {address:1, description:1, operator_address:1, delegator_address:1};\n        if (address.includes(Meteor.settings.public.bech32PrefixValAddr)){\n            // validator operator address\n            validator = Validators.findOne({operator_address:address}, {fields});\n        }\n        else if (address.includes(Meteor.settings.public.bech32PrefixAccAddr)){\n            // delegator address\n            validator = Validators.findOne({delegator_address:address}, {fields});\n        }\n        else if (address.length === AddressLength) {\n            validator = Validators.findOne({address:address}, {fields});\n        }\n        if (validator){\n            return validator;\n        }\n        return false;\n\n    },\n    \n    'Transactions.detailByHash': function(hash){\n        return JSON.stringify(Transactions.find({txhash:hash}).fetch());\n    },\n    'Transactions.findByHeight': function(height){\n        return Transactions.find({height: height}, {sort: {timestamp: -1}}).fetch();\n    },\n    'Transactions.pagination': function(page, limit){\n        let countAll = Transactions.find().count();\n        let response = {\n            pagination: {\n                total_page: Math.round(countAll/limit),\n                total_record: countAll,\n                current_page: page,\n                from: (page - 1) * limit + 1,\n                to: page * limit\n            }\n        };\n        let offset = page * limit;\n        response.data = Transactions.find({}, {sort: {height: -1}, skip: offset, limit:limit}).fetch();\n        return JSON.stringify(response);\n    }\n});\n","import { Meteor } from 'meteor/meteor';\nimport { Transactions } from '../transactions.js';\nimport { Blockscon } from '../../blocks/blocks.js';\n\n\npublishComposite('transactions.list', function(limit = 30){\n    return {\n        find(){\n            return Transactions.find({},{sort:{height:-1}, limit:limit})\n        },\n        children: [\n            {\n                find(tx){\n                    return Blockscon.find(\n                        {height:tx.height},\n                        {fields:{time:1, height:1}}\n                    )\n                }\n            }\n        ]\n    }\n});\n\npublishComposite('transactions.validator', function(validatorAddress, delegatorAddress, limit=100){\n    let query = {};\n    if (validatorAddress && delegatorAddress){\n        query = {$or:[{\"events.attributes.value\":validatorAddress}, {\"events.attributes.value\":delegatorAddress}]}\n    }\n\n    if (!validatorAddress && delegatorAddress){\n        query = {\"events.attributes.value\":delegatorAddress}\n    }\n\n    return {\n        find(){\n            return Transactions.find(query, {sort:{height:-1}, limit:limit})\n        },\n        children:[\n            {\n                find(tx){\n                    return Blockscon.find(\n                        {height:tx.height},\n                        {fields:{time:1, height:1}}\n                    )\n                }\n            }\n        ]\n    }\n})\n\npublishComposite('transactions.findOne', function(hash){\n    return {\n        find(){\n            return Transactions.find({txhash:hash})\n        },\n        children: [\n            {\n                find(tx){\n                    return Blockscon.find(\n                        {height:tx.height},\n                        {fields:{time:1, height:1}}\n                    )\n                }\n            }\n        ]\n    }\n})\n\npublishComposite('transactions.height', function(height){\n    return {\n        find(){\n            return Transactions.find({height:height})\n        },\n        children: [\n            {\n                find(tx){\n                    return Blockscon.find(\n                        {height:tx.height},\n                        {fields:{time:1, height:1}}\n                    )\n                }\n            }\n        ]\n    }\n})","import { Mongo } from 'meteor/mongo';\nimport { Blockscon } from '../blocks/blocks.js';\n\nexport const Transactions = new Mongo.Collection('transactions');\n\nTransactions.helpers({\n    block(){\n        return Blockscon.findOne({height:this.height});\n    }\n})","import { Meteor } from \"meteor/meteor\";\nimport { Transactions } from \"../../transactions/transactions.js\";\nimport { Blockscon } from \"../../blocks/blocks.js\";\nimport { Delegations } from \"../../delegations/delegations.js\";\nimport { Validators } from \"../validators.js\";\nimport { MissedBlocks } from \"../../records/records.js\";\nimport { ChainStates } from \"../../chain/chain.js\";\nimport { VotingPowerHistory } from \"../../voting-power/history.js\";\n\nMeteor.methods({\n  \"Validators.findCreateValidatorTime\": function(address) {\n    // look up the create validator time to consider if the validator has never updated the commission\n    let tx = Transactions.findOne({\n      $and: [\n        { \"tx.value.msg.value.delegator_address\": address },\n        { \"tx.value.msg.type\": \"cosmos-sdk/MsgCreateValidator\" },\n        { code: { $exists: false } }\n      ]\n    });\n\n    if (tx) {\n      let block = Blockscon.findOne({ height: tx.height });\n      if (block) {\n        return block.time;\n      }\n    } else {\n      // no such create validator tx\n      return false;\n    }\n  },\n  // async 'Validators.getAllDelegations'(address){\n  \"Validators.getAllDelegations\"(address) {\n    let url = LCD + \"/staking/validators/\" + address + \"/delegations\";\n\n    try {\n      let delegations = HTTP.get(url);\n      if (delegations.statusCode == 200) {\n        delegations =\n          typeof delegations.data != \"undefined\"\n            ? delegations.data\n            : JSON.parse(delegations.content);\n        delegations =\n          typeof delegations == \"object\" &&\n          delegations != null &&\n          delegations.result != undefined\n            ? delegations.result\n            : delegations;\n        delegations.forEach((delegation, i) => {\n          if (delegations[i] && delegations[i].shares)\n            delegations[i].shares = parseFloat(delegations[i].shares);\n        });\n\n        return delegations;\n      }\n    } catch (e) {\n      console.log(e, 'methods.Validators.getAllDelegations');\n    }\n  },\n\n  \"Validators.detailByAddress\": function(address) {\n    let delegations = Delegations.findOne(\n      { delegations: { $elemMatch: { validator_address: address } } },\n      { sort: { createdAt: -1 } }\n    );\n    let lastChainStats = ChainStates.find({}, {sort: {time: -1}, limit: 1}).fetch().map(v => v.bondedTokens );\n    return JSON.stringify(Validators.find({ operator_pubkey: address })\n      .fetch()\n      .map(v => {\n        v.delegators = delegations ? delegations.delegations : [];\n        let miss_blocks = MissedBlocks.find({proposer: v.address}, {sort: {blockHeight: -1}, skip: 0, limit: 100}).fetch().map(val => val.blockHeight );\n        v.miss_blocks = miss_blocks ? miss_blocks : [];\n        let proposed_blocks = Blockscon.find({proposerAddress: v.address}, {sort: {height: -1}}).fetch();\n        v.proposed_blocks =  proposed_blocks ? proposed_blocks : [];\n        v.bondedTokens = lastChainStats ? lastChainStats[0] : 0;\n        let power_events = VotingPowerHistory.find({address: v.address}, {sort: {block_time: -1}}).fetch().map(val => {\n            val.block = Blockscon.findOne({height: val.height});\n            return val;\n        });\n        v.power_history = power_events ? power_events : [];\n        return v;\n      }));\n  },\n  \"Validators.pagination\": function(jailed_value, page, limit) {\n    let response = Validators.find(\n      {\n        jailed: { $exists: true, $eq: jailed_value },\n        voting_power: { $exists: true, $gt: 0 }\n      },\n      { sort: { voting_power: -1 }, skip: 0, limit: limit }\n    ).fetch();\n    return JSON.stringify(response);\n  },\n  \"Validators.count\": function() {\n    return {\n      total_validator_num: Validators.find().count(),\n      unjailed_validator_num: Validators.find({ jailed: false }).count()\n    };\n  }\n});\n","import { Meteor } from 'meteor/meteor';\nimport { Validators } from '../validators.js';\nimport { ValidatorRecords } from '../../records/records.js';\nimport { VotingPowerHistory } from '../../voting-power/history.js';\n\nMeteor.publish('validators.all', function (sort = \"description.moniker\", direction = -1, fields={}) {\n    return Validators.find({}, {sort: {[sort]: direction}, fields: fields});\n});\n\npublishComposite('validators.firstSeen',{\n    find() {\n        return Validators.find({});\n    },\n    children: [\n        {\n            find(val) {\n                return ValidatorRecords.find(\n                    { address: val.address },\n                    { sort: {height: 1}, limit: 1}\n                );\n            }\n        }\n    ]\n});\n\nMeteor.publish('validators.voting_power', function(){\n    return Validators.find({\n        status: 2,\n        jailed:false\n    },{\n        sort:{\n            voting_power:-1\n        },\n        fields:{\n            address: 1,\n            description:1,\n            voting_power:1,\n            profile_url:1\n        }\n    }\n    );\n});\n\npublishComposite('validator.details', function(address){\n    let options = {address:address};\n    if (address.indexOf(Meteor.settings.public.bech32PrefixValAddr) != -1){\n        options = {operator_address:address}\n    }\n    return {\n        find(){\n            return Validators.find(options)\n        },\n        children: [\n            {\n                find(val){\n                    return VotingPowerHistory.find(\n                        {address:val.address},\n                        {sort:{height:-1}, limit:50}\n                    )\n                }\n            },\n            {\n                find(val) {\n                    return ValidatorRecords.find(\n                        { address: val.address },\n                        { sort: {height: -1}, limit: Meteor.settings.public.uptimeWindow}\n                    );\n                }\n            }\n        ]\n    }\n});\n\nMeteor.publish('validators.count', function(){\n    return Validators.find();\n});\n","import { Mongo } from 'meteor/mongo';\nimport { ValidatorRecords } from '../records/records.js';\nimport { VotingPowerHistory } from '../voting-power/history.js';\n\nexport const Validators = new Mongo.Collection('validators');\n\nValidators.helpers({\n    firstSeen(){\n        return ValidatorRecords.findOne({address:this.address});\n    },\n    history(){\n        return VotingPowerHistory.find({address:this.address}, {sort:{height:-1}, limit:50}).fetch();\n    }\n})\n// Validators.helpers({\n//     uptime(){\n//         // console.log(this.address);\n//         let lastHundred = ValidatorRecords.find({address:this.address}, {sort:{height:-1}, limit:100}).fetch();\n//         console.log(lastHundred);\n//         let uptime = 0;\n//         for (i in lastHundred){\n//             if (lastHundred[i].exists){\n//                 uptime+=1;\n//             }\n//         }\n//         return uptime;\n//     }\n// })","import { Mongo } from 'meteor/mongo';\n\nexport const VotingPowerHistory = new Mongo.Collection('voting_power_history');\n","import { Mongo } from 'meteor/mongo';\n\nexport const Evidences = new Mongo.Collection('evidences');\n","import { Mongo } from 'meteor/mongo';\n\nexport const ValidatorSets = new Mongo.Collection('validator_sets');\n","import { Blockscon } from '../../api/blocks/blocks.js';\nimport { Proposals } from '../../api/proposals/proposals.js';\nimport { ValidatorRecords, Analytics, MissedBlocksStats, MissedBlocks, AverageData, AverageValidatorData } from '../../api/records/records.js';\n// import { Status } from '../../api/status/status.js';\nimport { Transactions } from '../../api/transactions/transactions.js';\nimport { ValidatorSets } from '../../api/validator-sets/validator-sets.js';\nimport { Validators } from '../../api/validators/validators.js';\nimport { VotingPowerHistory } from '../../api/voting-power/history.js';\nimport { Evidences } from '../../api/evidences/evidences.js';\nimport { CoinStats } from '../../api/coin-stats/coin-stats.js';\nimport { ChainStates } from '../../api/chain/chain.js';\n\nChainStates.rawCollection().createIndex({height: -1},{unique:true});\n\nBlockscon.rawCollection().createIndex({height: -1},{unique:true});\nBlockscon.rawCollection().createIndex({proposerAddress:1});\n\nEvidences.rawCollection().createIndex({height: -1});\n\nProposals.rawCollection().createIndex({proposalId: 1}, {unique:true});\n\nValidatorRecords.rawCollection().createIndex({address:1,height: -1}, {unique:1});\nValidatorRecords.rawCollection().createIndex({address:1,exists:1, height: -1});\n\nAnalytics.rawCollection().createIndex({height: -1}, {unique:true})\n\nMissedBlocks.rawCollection().createIndex({proposer:1, voter:1, updatedAt: -1});\nMissedBlocks.rawCollection().createIndex({proposer:1, blockHeight:-1});\nMissedBlocks.rawCollection().createIndex({voter:1, blockHeight:-1});\nMissedBlocks.rawCollection().createIndex({voter:1, proposer:1, blockHeight:-1}, {unique:true});\n\nMissedBlocksStats.rawCollection().createIndex({proposer:1});\nMissedBlocksStats.rawCollection().createIndex({voter:1});\nMissedBlocksStats.rawCollection().createIndex({proposer:1, voter:1},{unique:true});\n\nAverageData.rawCollection().createIndex({type:1, createdAt:-1},{unique:true});\nAverageValidatorData.rawCollection().createIndex({proposerAddress:1,createdAt:-1},{unique:true});\n// Status.rawCollection.createIndex({})\n\nTransactions.rawCollection().createIndex({txhash:1},{unique:true});\nTransactions.rawCollection().createIndex({height:-1});\n// Transactions.rawCollection().createIndex({action:1});\nTransactions.rawCollection().createIndex({\"events.attributes.key\":1});\nTransactions.rawCollection().createIndex({\"events.attributes.value\":1});\n\nValidatorSets.rawCollection().createIndex({block_height:-1});\n\nValidators.rawCollection().createIndex({address:1},{unique:true, partialFilterExpression: { address: { $exists: true } } });\nValidators.rawCollection().createIndex({consensus_pubkey:1},{unique:true});\nValidators.rawCollection().createIndex({\"pub_key.value\":1},{unique:true, partialFilterExpression: { \"pub_key.value\": { $exists: true } }});\n\nVotingPowerHistory.rawCollection().createIndex({address:1,height:-1});\nVotingPowerHistory.rawCollection().createIndex({type:1});\n\nCoinStats.rawCollection().createIndex({last_updated_at:-1},{unique:true});\n","// Import server startup through a single index entry point\n\nimport './util.js';\nimport './register-api.js';\nimport './create-indexes.js';\n\n// import React from 'react';\n// import { renderToNodeStream } from 'react-dom/server';\n// import { renderToString } from \"react-dom/server\";\n// import { onPageLoad } from 'meteor/server-render';\n// import { StaticRouter } from 'react-router-dom';\n// import { ServerStyleSheet } from \"styled-components\"\n// import { Helmet } from 'react-helmet';\n\n// import App from '../../ui/App.jsx';\n\n// onPageLoad(sink => {\n    // const context = {};\n    // const sheet = new ServerStyleSheet()\n\n    // const html = renderToString(sheet.collectStyles(\n    //     <StaticRouter location={sink.request.url} context={context}>\n    //         <App />\n    //     </StaticRouter>\n    //   ));\n\n    // sink.renderIntoElementById('app', html);\n\n    // const helmet = Helmet.renderStatic();\n    // sink.appendToHead(helmet.meta.toString());\n    // sink.appendToHead(helmet.title.toString());\n\n    // sink.appendToHead(sheet.getStyleTags());\n// });","// Register your apis here\n\nimport '../../api/ledger/server/methods.js';\n\nimport '../../api/chain/server/methods.js';\nimport '../../api/chain/server/publications.js';\n\nimport '../../api/blocks/server/methods.js';\nimport '../../api/blocks/server/publications.js';\n\nimport '../../api/validators/server/methods.js';\nimport '../../api/validators/server/publications.js';\n\nimport '../../api/records/server/methods.js';\nimport '../../api/records/server/publications.js';\n\nimport '../../api/proposals/server/methods.js';\nimport '../../api/proposals/server/publications.js';\n\nimport '../../api/voting-power/server/publications.js';\n\nimport '../../api/transactions/server/methods.js';\nimport '../../api/transactions/server/publications.js';\n\nimport '../../api/delegations/server/methods.js';\nimport '../../api/delegations/server/publications.js';\n\nimport '../../api/status/server/publications.js';\n\nimport '../../api/accounts/server/methods.js';\n\nimport '../../api/coin-stats/server/methods.js';\n","import bech32 from 'bech32'\nimport { HTTP } from 'meteor/http';\nimport * as cheerio from 'cheerio';\n\n// Load future from fibers\nvar Future = Npm.require(\"fibers/future\");\n// Load exec\nvar exec = Npm.require(\"child_process\").exec;\n\nfunction toHexString(byteArray) {\n    return byteArray.map(function(byte) {\n        return ('0' + (byte & 0xFF).toString(16)).slice(-2);\n    }).join('')\n}\n\nMeteor.methods({\n    pubkeyToBech32: function(pubkey, prefix) {\n        // '1624DE6420' is ed25519 pubkey prefix\n        let pubkeyAminoPrefix = Buffer.from('1624DE6420', 'hex')\n        let buffer = Buffer.alloc(37)\n        pubkeyAminoPrefix.copy(buffer, 0)\n        Buffer.from(pubkey.value, 'base64').copy(buffer, pubkeyAminoPrefix.length)\n        return bech32.encode(prefix, bech32.toWords(buffer))\n    },\n    bech32ToPubkey: function(pubkey) {\n        // '1624DE6420' is ed25519 pubkey prefix\n        let pubkeyAminoPrefix = Buffer.from('1624DE6420', 'hex')\n        let buffer = Buffer.from(bech32.fromWords(bech32.decode(pubkey).words));\n        return buffer.slice(pubkeyAminoPrefix.length).toString('base64');\n    },\n    getDelegator: function(operatorAddr){\n        let address = bech32.decode(operatorAddr);\n        return bech32.encode(Meteor.settings.public.bech32PrefixAccAddr, address.words);\n    },\n    getKeybaseTeamPic: function(keybaseUrl){\n        let teamPage = HTTP.get(keybaseUrl);\n        if (teamPage.statusCode == 200){\n            let page = cheerio.load(teamPage.content);\n            return page(\".kb-main-card img\").attr('src');\n        }\n    }\n})\n","// Server entry point, imports all server code\n\nimport '/imports/startup/server';\n// import '/imports/startup/both';\n// import moment from 'moment';\n// import '/imports/api/blocks/blocks.js';\n\nSYNCING = false;\nCOUNTMISSEDBLOCKS = false;\nCOUNTMISSEDBLOCKSSTATS = false;\nRPC = Meteor.settings.remote.rpc;\nLCD = Meteor.settings.remote.lcd;\ntimerBlocks = 0;\ntimerChain = 0;\ntimerConsensus = 0;\ntimerProposal = 0;\ntimerProposalsResults = 0;\ntimerMissedBlock = 0;\ntimerDelegation = 0;\ntimerAggregate = 0;\n\nconst DEFAULTSETTINGS = '/default_settings.json';\n\nupdateChainStatus = () => {\n    Meteor.call('chain.updateStatus', (error, result) => {\n        if (error){\n            console.log(\"updateStatus: \"+error, 'server-chain.updateStatus');\n        }\n        else{\n            console.log(\"updateStatus: \"+result);\n        }\n    })\n}\n\nupdateBlock = () => {\n    Meteor.call('blocks.blocksUpdate', (error, result) => {\n        if (error){\n            console.log(\"updateBlocks: \"+error, 'server-blocks.blocksUpdate');\n        }\n        else{\n            console.log(\"updateBlocks: \"+result);\n        }\n    })\n}\n\ngetConsensusState = () => {\n    Meteor.call('chain.getConsensusState', (error, result) => {\n        if (error){\n            console.log(\"get consensus: \"+error, 'server-chain.getConsensusState')\n        }\n    })\n}\n\ngetProposals = () => {\n    Meteor.call('proposals.getProposals', (error, result) => {\n        if (error){\n            console.log(\"get proposal: \"+ error, 'server-proposals.getProposals');\n        }\n        if (result){\n            console.log(\"get proposal: \"+result);\n        }\n    });\n}\n\ngetProposalsResults = () => {\n    Meteor.call('proposals.getProposalResults', (error, result) => {\n        if (error){\n            console.log(\"get proposals result: \"+error, 'server-proposals.getProposalResults');\n        }\n        if (result){\n            console.log(\"get proposals result: \"+result);\n        }\n    });\n}\n\nupdateMissedBlocks = () => {\n    Meteor.call('ValidatorRecords.calculateMissedBlocks', (error, result) =>{\n        if (error){\n            console.log(\"missed blocks error: \"+ error, 'server-ValidatorRecords.calculateMissedBlocks')\n        }\n        if (result){\n            console.log(\"missed blocks ok:\" + result);\n        }\n    });\n/*\n    Meteor.call('ValidatorRecords.calculateMissedBlocksStats', (error, result) =>{\n        if (error){\n            console.log(\"missed blocks stats error: \"+ error)\n        }\n        if (result){\n            console.log(\"missed blocks stats ok:\" + result);\n        }\n    });\n*/\n}\n\ngetDelegations = () => {\n    Meteor.call('delegations.getDelegations', (error, result) => {\n        if (error){\n            console.log(\"get delegations error: \"+ error, 'server-delegations.getDelegations')\n        }\n        else{\n            console.log(\"get delegations ok: \"+ result)\n        }\n    });\n}\n\naggregateMinutely = () =>{\n    // doing something every min\n    Meteor.call('Analytics.aggregateBlockTimeAndVotingPower', \"m\", (error, result) => {\n        if (error){\n            console.log(\"aggregate minutely block time error: \"+error, 'server-Analytics.aggregateBlockTimeAndVotingPower')\n        }\n        else{\n            console.log(\"aggregate minutely block time ok: \"+result)\n        }\n    });\n\n    Meteor.call('coinStats.getCoinStats', (error, result) => {\n        if (error){\n            console.log(\"get coin stats error: \"+error, 'server-coinStats.getCoinStats');\n        }\n        else{\n            console.log(\"get coin stats ok: \"+result)\n        }\n    });\n}\n\naggregateHourly = () =>{\n    // doing something every hour\n    Meteor.call('Analytics.aggregateBlockTimeAndVotingPower', \"h\", (error, result) => {\n        if (error){\n            console.log(\"aggregate hourly block time error: \"+error, 'server-Analytics.aggregateBlockTimeAndVotingPower')\n        }\n        else{\n            console.log(\"aggregate hourly block time ok: \"+result)\n        }\n    });\n}\n\naggregateDaily = () =>{\n    // doing somthing every day\n    Meteor.call('Analytics.aggregateBlockTimeAndVotingPower', \"d\", (error, result) => {\n        if (error){\n            console.log(\"aggregate daily block time error: \"+error, 'server-Analytics.aggregateBlockTimeAndVotingPower')\n        }\n        else{\n            console.log(\"aggregate daily block time ok: \"+result)\n        }\n    });\n\n    Meteor.call('Analytics.aggregateValidatorDailyBlockTime', (error, result) => {\n        if (error){\n            console.log(\"aggregate validators block time error:\"+ error, 'server-Analytics.aggregateValidatorDailyBlockTime')\n        }\n        else {\n            console.log(\"aggregate validators block time ok:\"+ result);\n        }\n    })\n}\n\n\n\nMeteor.startup(function(){\n    if (Meteor.isDevelopment){\n        process.env.NODE_TLS_REJECT_UNAUTHORIZED = 0;\n        import DEFAULTSETTINGSJSON from '../default_settings.json'\n        Object.keys(DEFAULTSETTINGSJSON).forEach((key) => {\n            if (Meteor.settings[key] == undefined) {\n                console.warn(`CHECK SETTINGS JSON: ${key} is missing from settings`)\n                Meteor.settings[key] = {};\n            }\n            Object.keys(DEFAULTSETTINGSJSON[key]).forEach((param) => {\n                if (Meteor.settings[key][param] == undefined){\n                    console.warn(`CHECK SETTINGS JSON: ${key}.${param} is missing from settings`)\n                    Meteor.settings[key][param] = DEFAULTSETTINGSJSON[key][param]\n                }\n            })\n        })\n    }\n\n    Meteor.call('chain.genesis', (err, result) => {\n        if (err){\n            console.log(err);\n        }\n        if (result){\n            if (Meteor.settings.debug.startTimer){\n                timerConsensus = Meteor.setInterval(function(){\n                    getConsensusState();\n                }, Meteor.settings.params.consensusInterval);\n\n                timerBlocks = Meteor.setInterval(function(){\n                    updateBlock();\n                }, Meteor.settings.params.blockInterval);\n\n                timerChain = Meteor.setInterval(function(){\n                    updateChainStatus();\n                }, Meteor.settings.params.statusInterval);\n\n                timerProposal = Meteor.setInterval(function(){\n                    getProposals();\n                }, Meteor.settings.params.proposalInterval);\n\n                timerProposalsResults = Meteor.setInterval(function(){\n                    getProposalsResults();\n                }, Meteor.settings.params.proposalInterval);\n\n                timerMissedBlock = Meteor.setInterval(function(){\n                    updateMissedBlocks();\n                }, Meteor.settings.params.missedBlocksInterval);\n\n                timerDelegation = Meteor.setInterval(function(){\n                    getDelegations();\n                }, Meteor.settings.params.delegationInterval);\n\n                timerAggregate = Meteor.setInterval(function(){\n                    let now = new Date();\n                    if ((now.getUTCSeconds() == 0)){\n                        aggregateMinutely();\n                    }\n\n                    if ((now.getUTCMinutes() == 0) && (now.getUTCSeconds() == 0)){\n                        aggregateHourly();\n                    }\n\n                    if ((now.getUTCHours() == 0) && (now.getUTCMinutes() == 0) && (now.getUTCSeconds() == 0)){\n                        aggregateDaily();\n                    }\n                }, 1000)\n            }\n        }\n    })\n\n});\n"]}